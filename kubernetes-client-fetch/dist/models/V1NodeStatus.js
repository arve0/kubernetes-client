"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.V1NodeStatusToJSON = exports.V1NodeStatusFromJSONTyped = exports.V1NodeStatusFromJSON = void 0;
const runtime_1 = require("../runtime");
const _1 = require("./");
function V1NodeStatusFromJSON(json) {
    return V1NodeStatusFromJSONTyped(json, false);
}
exports.V1NodeStatusFromJSON = V1NodeStatusFromJSON;
function V1NodeStatusFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'addresses': !runtime_1.exists(json, 'addresses') ? undefined : (json['addresses'].map(_1.V1NodeAddressFromJSON)),
        'allocatable': !runtime_1.exists(json, 'allocatable') ? undefined : json['allocatable'],
        'capacity': !runtime_1.exists(json, 'capacity') ? undefined : json['capacity'],
        'conditions': !runtime_1.exists(json, 'conditions') ? undefined : (json['conditions'].map(_1.V1NodeConditionFromJSON)),
        'config': !runtime_1.exists(json, 'config') ? undefined : _1.V1NodeConfigStatusFromJSON(json['config']),
        'daemonEndpoints': !runtime_1.exists(json, 'daemonEndpoints') ? undefined : _1.V1NodeDaemonEndpointsFromJSON(json['daemonEndpoints']),
        'images': !runtime_1.exists(json, 'images') ? undefined : (json['images'].map(_1.V1ContainerImageFromJSON)),
        'nodeInfo': !runtime_1.exists(json, 'nodeInfo') ? undefined : _1.V1NodeSystemInfoFromJSON(json['nodeInfo']),
        'phase': !runtime_1.exists(json, 'phase') ? undefined : json['phase'],
        'volumesAttached': !runtime_1.exists(json, 'volumesAttached') ? undefined : (json['volumesAttached'].map(_1.V1AttachedVolumeFromJSON)),
        'volumesInUse': !runtime_1.exists(json, 'volumesInUse') ? undefined : json['volumesInUse'],
    };
}
exports.V1NodeStatusFromJSONTyped = V1NodeStatusFromJSONTyped;
function V1NodeStatusToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'addresses': value.addresses === undefined ? undefined : (value.addresses.map(_1.V1NodeAddressToJSON)),
        'allocatable': value.allocatable,
        'capacity': value.capacity,
        'conditions': value.conditions === undefined ? undefined : (value.conditions.map(_1.V1NodeConditionToJSON)),
        'config': _1.V1NodeConfigStatusToJSON(value.config),
        'daemonEndpoints': _1.V1NodeDaemonEndpointsToJSON(value.daemonEndpoints),
        'images': value.images === undefined ? undefined : (value.images.map(_1.V1ContainerImageToJSON)),
        'nodeInfo': _1.V1NodeSystemInfoToJSON(value.nodeInfo),
        'phase': value.phase,
        'volumesAttached': value.volumesAttached === undefined ? undefined : (value.volumesAttached.map(_1.V1AttachedVolumeToJSON)),
        'volumesInUse': value.volumesInUse,
    };
}
exports.V1NodeStatusToJSON = V1NodeStatusToJSON;
