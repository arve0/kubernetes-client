/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1LocalObjectReference } from './';
/**
 * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
 * @export
 * @interface V1RBDVolumeSource
 */
export interface V1RBDVolumeSource {
    /**
     * fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
     * @type {string}
     * @memberof V1RBDVolumeSource
     */
    fsType?: string;
    /**
     * image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
     * @type {string}
     * @memberof V1RBDVolumeSource
     */
    image: string;
    /**
     * keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
     * @type {string}
     * @memberof V1RBDVolumeSource
     */
    keyring?: string;
    /**
     * monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
     * @type {Array<string>}
     * @memberof V1RBDVolumeSource
     */
    monitors: Array<string>;
    /**
     * pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
     * @type {string}
     * @memberof V1RBDVolumeSource
     */
    pool?: string;
    /**
     * readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
     * @type {boolean}
     * @memberof V1RBDVolumeSource
     */
    readOnly?: boolean;
    /**
     *
     * @type {V1LocalObjectReference}
     * @memberof V1RBDVolumeSource
     */
    secretRef?: V1LocalObjectReference;
    /**
     * user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
     * @type {string}
     * @memberof V1RBDVolumeSource
     */
    user?: string;
}
export declare function V1RBDVolumeSourceFromJSON(json: any): V1RBDVolumeSource;
export declare function V1RBDVolumeSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1RBDVolumeSource;
export declare function V1RBDVolumeSourceToJSON(value?: V1RBDVolumeSource | null): any;
