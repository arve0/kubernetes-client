"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.V1PersistentVolumeSpecToJSON = exports.V1PersistentVolumeSpecFromJSONTyped = exports.V1PersistentVolumeSpecFromJSON = void 0;
const runtime_1 = require("../runtime");
const _1 = require("./");
function V1PersistentVolumeSpecFromJSON(json) {
    return V1PersistentVolumeSpecFromJSONTyped(json, false);
}
exports.V1PersistentVolumeSpecFromJSON = V1PersistentVolumeSpecFromJSON;
function V1PersistentVolumeSpecFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'accessModes': !runtime_1.exists(json, 'accessModes') ? undefined : json['accessModes'],
        'awsElasticBlockStore': !runtime_1.exists(json, 'awsElasticBlockStore') ? undefined : _1.V1AWSElasticBlockStoreVolumeSourceFromJSON(json['awsElasticBlockStore']),
        'azureDisk': !runtime_1.exists(json, 'azureDisk') ? undefined : _1.V1AzureDiskVolumeSourceFromJSON(json['azureDisk']),
        'azureFile': !runtime_1.exists(json, 'azureFile') ? undefined : _1.V1AzureFilePersistentVolumeSourceFromJSON(json['azureFile']),
        'capacity': !runtime_1.exists(json, 'capacity') ? undefined : json['capacity'],
        'cephfs': !runtime_1.exists(json, 'cephfs') ? undefined : _1.V1CephFSPersistentVolumeSourceFromJSON(json['cephfs']),
        'cinder': !runtime_1.exists(json, 'cinder') ? undefined : _1.V1CinderPersistentVolumeSourceFromJSON(json['cinder']),
        'claimRef': !runtime_1.exists(json, 'claimRef') ? undefined : _1.V1ObjectReferenceFromJSON(json['claimRef']),
        'csi': !runtime_1.exists(json, 'csi') ? undefined : _1.V1CSIPersistentVolumeSourceFromJSON(json['csi']),
        'fc': !runtime_1.exists(json, 'fc') ? undefined : _1.V1FCVolumeSourceFromJSON(json['fc']),
        'flexVolume': !runtime_1.exists(json, 'flexVolume') ? undefined : _1.V1FlexPersistentVolumeSourceFromJSON(json['flexVolume']),
        'flocker': !runtime_1.exists(json, 'flocker') ? undefined : _1.V1FlockerVolumeSourceFromJSON(json['flocker']),
        'gcePersistentDisk': !runtime_1.exists(json, 'gcePersistentDisk') ? undefined : _1.V1GCEPersistentDiskVolumeSourceFromJSON(json['gcePersistentDisk']),
        'glusterfs': !runtime_1.exists(json, 'glusterfs') ? undefined : _1.V1GlusterfsPersistentVolumeSourceFromJSON(json['glusterfs']),
        'hostPath': !runtime_1.exists(json, 'hostPath') ? undefined : _1.V1HostPathVolumeSourceFromJSON(json['hostPath']),
        'iscsi': !runtime_1.exists(json, 'iscsi') ? undefined : _1.V1ISCSIPersistentVolumeSourceFromJSON(json['iscsi']),
        'local': !runtime_1.exists(json, 'local') ? undefined : _1.V1LocalVolumeSourceFromJSON(json['local']),
        'mountOptions': !runtime_1.exists(json, 'mountOptions') ? undefined : json['mountOptions'],
        'nfs': !runtime_1.exists(json, 'nfs') ? undefined : _1.V1NFSVolumeSourceFromJSON(json['nfs']),
        'nodeAffinity': !runtime_1.exists(json, 'nodeAffinity') ? undefined : _1.V1VolumeNodeAffinityFromJSON(json['nodeAffinity']),
        'persistentVolumeReclaimPolicy': !runtime_1.exists(json, 'persistentVolumeReclaimPolicy') ? undefined : json['persistentVolumeReclaimPolicy'],
        'photonPersistentDisk': !runtime_1.exists(json, 'photonPersistentDisk') ? undefined : _1.V1PhotonPersistentDiskVolumeSourceFromJSON(json['photonPersistentDisk']),
        'portworxVolume': !runtime_1.exists(json, 'portworxVolume') ? undefined : _1.V1PortworxVolumeSourceFromJSON(json['portworxVolume']),
        'quobyte': !runtime_1.exists(json, 'quobyte') ? undefined : _1.V1QuobyteVolumeSourceFromJSON(json['quobyte']),
        'rbd': !runtime_1.exists(json, 'rbd') ? undefined : _1.V1RBDPersistentVolumeSourceFromJSON(json['rbd']),
        'scaleIO': !runtime_1.exists(json, 'scaleIO') ? undefined : _1.V1ScaleIOPersistentVolumeSourceFromJSON(json['scaleIO']),
        'storageClassName': !runtime_1.exists(json, 'storageClassName') ? undefined : json['storageClassName'],
        'storageos': !runtime_1.exists(json, 'storageos') ? undefined : _1.V1StorageOSPersistentVolumeSourceFromJSON(json['storageos']),
        'volumeMode': !runtime_1.exists(json, 'volumeMode') ? undefined : json['volumeMode'],
        'vsphereVolume': !runtime_1.exists(json, 'vsphereVolume') ? undefined : _1.V1VsphereVirtualDiskVolumeSourceFromJSON(json['vsphereVolume']),
    };
}
exports.V1PersistentVolumeSpecFromJSONTyped = V1PersistentVolumeSpecFromJSONTyped;
function V1PersistentVolumeSpecToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'accessModes': value.accessModes,
        'awsElasticBlockStore': _1.V1AWSElasticBlockStoreVolumeSourceToJSON(value.awsElasticBlockStore),
        'azureDisk': _1.V1AzureDiskVolumeSourceToJSON(value.azureDisk),
        'azureFile': _1.V1AzureFilePersistentVolumeSourceToJSON(value.azureFile),
        'capacity': value.capacity,
        'cephfs': _1.V1CephFSPersistentVolumeSourceToJSON(value.cephfs),
        'cinder': _1.V1CinderPersistentVolumeSourceToJSON(value.cinder),
        'claimRef': _1.V1ObjectReferenceToJSON(value.claimRef),
        'csi': _1.V1CSIPersistentVolumeSourceToJSON(value.csi),
        'fc': _1.V1FCVolumeSourceToJSON(value.fc),
        'flexVolume': _1.V1FlexPersistentVolumeSourceToJSON(value.flexVolume),
        'flocker': _1.V1FlockerVolumeSourceToJSON(value.flocker),
        'gcePersistentDisk': _1.V1GCEPersistentDiskVolumeSourceToJSON(value.gcePersistentDisk),
        'glusterfs': _1.V1GlusterfsPersistentVolumeSourceToJSON(value.glusterfs),
        'hostPath': _1.V1HostPathVolumeSourceToJSON(value.hostPath),
        'iscsi': _1.V1ISCSIPersistentVolumeSourceToJSON(value.iscsi),
        'local': _1.V1LocalVolumeSourceToJSON(value.local),
        'mountOptions': value.mountOptions,
        'nfs': _1.V1NFSVolumeSourceToJSON(value.nfs),
        'nodeAffinity': _1.V1VolumeNodeAffinityToJSON(value.nodeAffinity),
        'persistentVolumeReclaimPolicy': value.persistentVolumeReclaimPolicy,
        'photonPersistentDisk': _1.V1PhotonPersistentDiskVolumeSourceToJSON(value.photonPersistentDisk),
        'portworxVolume': _1.V1PortworxVolumeSourceToJSON(value.portworxVolume),
        'quobyte': _1.V1QuobyteVolumeSourceToJSON(value.quobyte),
        'rbd': _1.V1RBDPersistentVolumeSourceToJSON(value.rbd),
        'scaleIO': _1.V1ScaleIOPersistentVolumeSourceToJSON(value.scaleIO),
        'storageClassName': value.storageClassName,
        'storageos': _1.V1StorageOSPersistentVolumeSourceToJSON(value.storageos),
        'volumeMode': value.volumeMode,
        'vsphereVolume': _1.V1VsphereVirtualDiskVolumeSourceToJSON(value.vsphereVolume),
    };
}
exports.V1PersistentVolumeSpecToJSON = V1PersistentVolumeSpecToJSON;
