/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1beta1NonResourcePolicyRule, V1beta1ResourcePolicyRule, V1beta1Subject } from './';
/**
 * PolicyRulesWithSubjects prescribes a test that applies to a request to an apiserver. The test considers the subject making the request, the verb being requested, and the resource to be acted upon. This PolicyRulesWithSubjects matches a request if and only if both (a) at least one member of subjects matches the request and (b) at least one member of resourceRules or nonResourceRules matches the request.
 * @export
 * @interface V1beta1PolicyRulesWithSubjects
 */
export interface V1beta1PolicyRulesWithSubjects {
    /**
     * `nonResourceRules` is a list of NonResourcePolicyRules that identify matching requests according to their verb and the target non-resource URL.
     * @type {Array<V1beta1NonResourcePolicyRule>}
     * @memberof V1beta1PolicyRulesWithSubjects
     */
    nonResourceRules?: Array<V1beta1NonResourcePolicyRule>;
    /**
     * `resourceRules` is a slice of ResourcePolicyRules that identify matching requests according to their verb and the target resource. At least one of `resourceRules` and `nonResourceRules` has to be non-empty.
     * @type {Array<V1beta1ResourcePolicyRule>}
     * @memberof V1beta1PolicyRulesWithSubjects
     */
    resourceRules?: Array<V1beta1ResourcePolicyRule>;
    /**
     * subjects is the list of normal user, serviceaccount, or group that this rule cares about. There must be at least one member in this slice. A slice that includes both the system:authenticated and system:unauthenticated user groups matches every request. Required.
     * @type {Array<V1beta1Subject>}
     * @memberof V1beta1PolicyRulesWithSubjects
     */
    subjects: Array<V1beta1Subject>;
}
export declare function V1beta1PolicyRulesWithSubjectsFromJSON(json: any): V1beta1PolicyRulesWithSubjects;
export declare function V1beta1PolicyRulesWithSubjectsFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta1PolicyRulesWithSubjects;
export declare function V1beta1PolicyRulesWithSubjectsToJSON(value?: V1beta1PolicyRulesWithSubjects | null): any;
