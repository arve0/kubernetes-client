/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CoreV1EventSeries, V1EventSource, V1ObjectMeta, V1ObjectReference } from './';
/**
 * Event is a report of an event somewhere in the cluster.  Events have a limited retention time and triggers and messages may evolve with time.  Event consumers should not rely on the timing of an event with a given Reason reflecting a consistent underlying trigger, or the continued existence of events with that Reason.  Events should be treated as informative, best-effort, supplemental data.
 * @export
 * @interface CoreV1Event
 */
export interface CoreV1Event {
    /**
     * What action was taken/failed regarding to the Regarding object.
     * @type {string}
     * @memberof CoreV1Event
     */
    action?: string;
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof CoreV1Event
     */
    apiVersion?: string;
    /**
     * The number of times this event has occurred.
     * @type {number}
     * @memberof CoreV1Event
     */
    count?: number;
    /**
     * Time when this Event was first observed.
     * @type {Date}
     * @memberof CoreV1Event
     */
    eventTime?: Date;
    /**
     * The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)
     * @type {Date}
     * @memberof CoreV1Event
     */
    firstTimestamp?: Date;
    /**
     *
     * @type {V1ObjectReference}
     * @memberof CoreV1Event
     */
    involvedObject: V1ObjectReference;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof CoreV1Event
     */
    kind?: string;
    /**
     * The time at which the most recent occurrence of this event was recorded.
     * @type {Date}
     * @memberof CoreV1Event
     */
    lastTimestamp?: Date;
    /**
     * A human-readable description of the status of this operation.
     * @type {string}
     * @memberof CoreV1Event
     */
    message?: string;
    /**
     *
     * @type {V1ObjectMeta}
     * @memberof CoreV1Event
     */
    metadata: V1ObjectMeta;
    /**
     * This should be a short, machine understandable string that gives the reason for the transition into the object's current status.
     * @type {string}
     * @memberof CoreV1Event
     */
    reason?: string;
    /**
     *
     * @type {V1ObjectReference}
     * @memberof CoreV1Event
     */
    related?: V1ObjectReference;
    /**
     * Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.
     * @type {string}
     * @memberof CoreV1Event
     */
    reportingComponent?: string;
    /**
     * ID of the controller instance, e.g. `kubelet-xyzf`.
     * @type {string}
     * @memberof CoreV1Event
     */
    reportingInstance?: string;
    /**
     *
     * @type {CoreV1EventSeries}
     * @memberof CoreV1Event
     */
    series?: CoreV1EventSeries;
    /**
     *
     * @type {V1EventSource}
     * @memberof CoreV1Event
     */
    source?: V1EventSource;
    /**
     * Type of this event (Normal, Warning), new types could be added in the future
     * @type {string}
     * @memberof CoreV1Event
     */
    type?: string;
}
export declare function CoreV1EventFromJSON(json: any): CoreV1Event;
export declare function CoreV1EventFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreV1Event;
export declare function CoreV1EventToJSON(value?: CoreV1Event | null): any;
