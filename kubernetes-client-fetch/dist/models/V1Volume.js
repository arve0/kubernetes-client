"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.V1VolumeToJSON = exports.V1VolumeFromJSONTyped = exports.V1VolumeFromJSON = void 0;
const runtime_1 = require("../runtime");
const _1 = require("./");
function V1VolumeFromJSON(json) {
    return V1VolumeFromJSONTyped(json, false);
}
exports.V1VolumeFromJSON = V1VolumeFromJSON;
function V1VolumeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'awsElasticBlockStore': !runtime_1.exists(json, 'awsElasticBlockStore') ? undefined : _1.V1AWSElasticBlockStoreVolumeSourceFromJSON(json['awsElasticBlockStore']),
        'azureDisk': !runtime_1.exists(json, 'azureDisk') ? undefined : _1.V1AzureDiskVolumeSourceFromJSON(json['azureDisk']),
        'azureFile': !runtime_1.exists(json, 'azureFile') ? undefined : _1.V1AzureFileVolumeSourceFromJSON(json['azureFile']),
        'cephfs': !runtime_1.exists(json, 'cephfs') ? undefined : _1.V1CephFSVolumeSourceFromJSON(json['cephfs']),
        'cinder': !runtime_1.exists(json, 'cinder') ? undefined : _1.V1CinderVolumeSourceFromJSON(json['cinder']),
        'configMap': !runtime_1.exists(json, 'configMap') ? undefined : _1.V1ConfigMapVolumeSourceFromJSON(json['configMap']),
        'csi': !runtime_1.exists(json, 'csi') ? undefined : _1.V1CSIVolumeSourceFromJSON(json['csi']),
        'downwardAPI': !runtime_1.exists(json, 'downwardAPI') ? undefined : _1.V1DownwardAPIVolumeSourceFromJSON(json['downwardAPI']),
        'emptyDir': !runtime_1.exists(json, 'emptyDir') ? undefined : _1.V1EmptyDirVolumeSourceFromJSON(json['emptyDir']),
        'ephemeral': !runtime_1.exists(json, 'ephemeral') ? undefined : _1.V1EphemeralVolumeSourceFromJSON(json['ephemeral']),
        'fc': !runtime_1.exists(json, 'fc') ? undefined : _1.V1FCVolumeSourceFromJSON(json['fc']),
        'flexVolume': !runtime_1.exists(json, 'flexVolume') ? undefined : _1.V1FlexVolumeSourceFromJSON(json['flexVolume']),
        'flocker': !runtime_1.exists(json, 'flocker') ? undefined : _1.V1FlockerVolumeSourceFromJSON(json['flocker']),
        'gcePersistentDisk': !runtime_1.exists(json, 'gcePersistentDisk') ? undefined : _1.V1GCEPersistentDiskVolumeSourceFromJSON(json['gcePersistentDisk']),
        'gitRepo': !runtime_1.exists(json, 'gitRepo') ? undefined : _1.V1GitRepoVolumeSourceFromJSON(json['gitRepo']),
        'glusterfs': !runtime_1.exists(json, 'glusterfs') ? undefined : _1.V1GlusterfsVolumeSourceFromJSON(json['glusterfs']),
        'hostPath': !runtime_1.exists(json, 'hostPath') ? undefined : _1.V1HostPathVolumeSourceFromJSON(json['hostPath']),
        'iscsi': !runtime_1.exists(json, 'iscsi') ? undefined : _1.V1ISCSIVolumeSourceFromJSON(json['iscsi']),
        'name': json['name'],
        'nfs': !runtime_1.exists(json, 'nfs') ? undefined : _1.V1NFSVolumeSourceFromJSON(json['nfs']),
        'persistentVolumeClaim': !runtime_1.exists(json, 'persistentVolumeClaim') ? undefined : _1.V1PersistentVolumeClaimVolumeSourceFromJSON(json['persistentVolumeClaim']),
        'photonPersistentDisk': !runtime_1.exists(json, 'photonPersistentDisk') ? undefined : _1.V1PhotonPersistentDiskVolumeSourceFromJSON(json['photonPersistentDisk']),
        'portworxVolume': !runtime_1.exists(json, 'portworxVolume') ? undefined : _1.V1PortworxVolumeSourceFromJSON(json['portworxVolume']),
        'projected': !runtime_1.exists(json, 'projected') ? undefined : _1.V1ProjectedVolumeSourceFromJSON(json['projected']),
        'quobyte': !runtime_1.exists(json, 'quobyte') ? undefined : _1.V1QuobyteVolumeSourceFromJSON(json['quobyte']),
        'rbd': !runtime_1.exists(json, 'rbd') ? undefined : _1.V1RBDVolumeSourceFromJSON(json['rbd']),
        'scaleIO': !runtime_1.exists(json, 'scaleIO') ? undefined : _1.V1ScaleIOVolumeSourceFromJSON(json['scaleIO']),
        'secret': !runtime_1.exists(json, 'secret') ? undefined : _1.V1SecretVolumeSourceFromJSON(json['secret']),
        'storageos': !runtime_1.exists(json, 'storageos') ? undefined : _1.V1StorageOSVolumeSourceFromJSON(json['storageos']),
        'vsphereVolume': !runtime_1.exists(json, 'vsphereVolume') ? undefined : _1.V1VsphereVirtualDiskVolumeSourceFromJSON(json['vsphereVolume']),
    };
}
exports.V1VolumeFromJSONTyped = V1VolumeFromJSONTyped;
function V1VolumeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'awsElasticBlockStore': _1.V1AWSElasticBlockStoreVolumeSourceToJSON(value.awsElasticBlockStore),
        'azureDisk': _1.V1AzureDiskVolumeSourceToJSON(value.azureDisk),
        'azureFile': _1.V1AzureFileVolumeSourceToJSON(value.azureFile),
        'cephfs': _1.V1CephFSVolumeSourceToJSON(value.cephfs),
        'cinder': _1.V1CinderVolumeSourceToJSON(value.cinder),
        'configMap': _1.V1ConfigMapVolumeSourceToJSON(value.configMap),
        'csi': _1.V1CSIVolumeSourceToJSON(value.csi),
        'downwardAPI': _1.V1DownwardAPIVolumeSourceToJSON(value.downwardAPI),
        'emptyDir': _1.V1EmptyDirVolumeSourceToJSON(value.emptyDir),
        'ephemeral': _1.V1EphemeralVolumeSourceToJSON(value.ephemeral),
        'fc': _1.V1FCVolumeSourceToJSON(value.fc),
        'flexVolume': _1.V1FlexVolumeSourceToJSON(value.flexVolume),
        'flocker': _1.V1FlockerVolumeSourceToJSON(value.flocker),
        'gcePersistentDisk': _1.V1GCEPersistentDiskVolumeSourceToJSON(value.gcePersistentDisk),
        'gitRepo': _1.V1GitRepoVolumeSourceToJSON(value.gitRepo),
        'glusterfs': _1.V1GlusterfsVolumeSourceToJSON(value.glusterfs),
        'hostPath': _1.V1HostPathVolumeSourceToJSON(value.hostPath),
        'iscsi': _1.V1ISCSIVolumeSourceToJSON(value.iscsi),
        'name': value.name,
        'nfs': _1.V1NFSVolumeSourceToJSON(value.nfs),
        'persistentVolumeClaim': _1.V1PersistentVolumeClaimVolumeSourceToJSON(value.persistentVolumeClaim),
        'photonPersistentDisk': _1.V1PhotonPersistentDiskVolumeSourceToJSON(value.photonPersistentDisk),
        'portworxVolume': _1.V1PortworxVolumeSourceToJSON(value.portworxVolume),
        'projected': _1.V1ProjectedVolumeSourceToJSON(value.projected),
        'quobyte': _1.V1QuobyteVolumeSourceToJSON(value.quobyte),
        'rbd': _1.V1RBDVolumeSourceToJSON(value.rbd),
        'scaleIO': _1.V1ScaleIOVolumeSourceToJSON(value.scaleIO),
        'secret': _1.V1SecretVolumeSourceToJSON(value.secret),
        'storageos': _1.V1StorageOSVolumeSourceToJSON(value.storageos),
        'vsphereVolume': _1.V1VsphereVirtualDiskVolumeSourceToJSON(value.vsphereVolume),
    };
}
exports.V1VolumeToJSON = V1VolumeToJSON;
