"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.V1PodSecurityContextToJSON = exports.V1PodSecurityContextFromJSONTyped = exports.V1PodSecurityContextFromJSON = void 0;
const runtime_1 = require("../runtime");
const _1 = require("./");
function V1PodSecurityContextFromJSON(json) {
    return V1PodSecurityContextFromJSONTyped(json, false);
}
exports.V1PodSecurityContextFromJSON = V1PodSecurityContextFromJSON;
function V1PodSecurityContextFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'fsGroup': !runtime_1.exists(json, 'fsGroup') ? undefined : json['fsGroup'],
        'fsGroupChangePolicy': !runtime_1.exists(json, 'fsGroupChangePolicy') ? undefined : json['fsGroupChangePolicy'],
        'runAsGroup': !runtime_1.exists(json, 'runAsGroup') ? undefined : json['runAsGroup'],
        'runAsNonRoot': !runtime_1.exists(json, 'runAsNonRoot') ? undefined : json['runAsNonRoot'],
        'runAsUser': !runtime_1.exists(json, 'runAsUser') ? undefined : json['runAsUser'],
        'seLinuxOptions': !runtime_1.exists(json, 'seLinuxOptions') ? undefined : _1.V1SELinuxOptionsFromJSON(json['seLinuxOptions']),
        'seccompProfile': !runtime_1.exists(json, 'seccompProfile') ? undefined : _1.V1SeccompProfileFromJSON(json['seccompProfile']),
        'supplementalGroups': !runtime_1.exists(json, 'supplementalGroups') ? undefined : json['supplementalGroups'],
        'sysctls': !runtime_1.exists(json, 'sysctls') ? undefined : (json['sysctls'].map(_1.V1SysctlFromJSON)),
        'windowsOptions': !runtime_1.exists(json, 'windowsOptions') ? undefined : _1.V1WindowsSecurityContextOptionsFromJSON(json['windowsOptions']),
    };
}
exports.V1PodSecurityContextFromJSONTyped = V1PodSecurityContextFromJSONTyped;
function V1PodSecurityContextToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'fsGroup': value.fsGroup,
        'fsGroupChangePolicy': value.fsGroupChangePolicy,
        'runAsGroup': value.runAsGroup,
        'runAsNonRoot': value.runAsNonRoot,
        'runAsUser': value.runAsUser,
        'seLinuxOptions': _1.V1SELinuxOptionsToJSON(value.seLinuxOptions),
        'seccompProfile': _1.V1SeccompProfileToJSON(value.seccompProfile),
        'supplementalGroups': value.supplementalGroups,
        'sysctls': value.sysctls === undefined ? undefined : (value.sysctls.map(_1.V1SysctlToJSON)),
        'windowsOptions': _1.V1WindowsSecurityContextOptionsToJSON(value.windowsOptions),
    };
}
exports.V1PodSecurityContextToJSON = V1PodSecurityContextToJSON;
