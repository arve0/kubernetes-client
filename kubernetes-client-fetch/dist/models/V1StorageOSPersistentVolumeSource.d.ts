/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1ObjectReference } from './';
/**
 * Represents a StorageOS persistent volume resource.
 * @export
 * @interface V1StorageOSPersistentVolumeSource
 */
export interface V1StorageOSPersistentVolumeSource {
    /**
     * fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
     * @type {string}
     * @memberof V1StorageOSPersistentVolumeSource
     */
    fsType?: string;
    /**
     * readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @type {boolean}
     * @memberof V1StorageOSPersistentVolumeSource
     */
    readOnly?: boolean;
    /**
     *
     * @type {V1ObjectReference}
     * @memberof V1StorageOSPersistentVolumeSource
     */
    secretRef?: V1ObjectReference;
    /**
     * volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
     * @type {string}
     * @memberof V1StorageOSPersistentVolumeSource
     */
    volumeName?: string;
    /**
     * volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
     * @type {string}
     * @memberof V1StorageOSPersistentVolumeSource
     */
    volumeNamespace?: string;
}
export declare function V1StorageOSPersistentVolumeSourceFromJSON(json: any): V1StorageOSPersistentVolumeSource;
export declare function V1StorageOSPersistentVolumeSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1StorageOSPersistentVolumeSource;
export declare function V1StorageOSPersistentVolumeSourceToJSON(value?: V1StorageOSPersistentVolumeSource | null): any;
