/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { V1APIResourceList, V1DeleteOptions, V1Status, V1alpha1StorageVersion, V1alpha1StorageVersionList } from '../models';
export interface InternalApiserverV1alpha1ApiCreateStorageVersionRequest {
    body: V1alpha1StorageVersion;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface InternalApiserverV1alpha1ApiDeleteCollectionStorageVersionRequest {
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: V1DeleteOptions;
}
export interface InternalApiserverV1alpha1ApiDeleteStorageVersionRequest {
    name: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: V1DeleteOptions;
}
export interface InternalApiserverV1alpha1ApiListStorageVersionRequest {
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface InternalApiserverV1alpha1ApiPatchStorageVersionRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface InternalApiserverV1alpha1ApiPatchStorageVersionStatusRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface InternalApiserverV1alpha1ApiReadStorageVersionRequest {
    name: string;
    pretty?: string;
}
export interface InternalApiserverV1alpha1ApiReadStorageVersionStatusRequest {
    name: string;
    pretty?: string;
}
export interface InternalApiserverV1alpha1ApiReplaceStorageVersionRequest {
    name: string;
    body: V1alpha1StorageVersion;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface InternalApiserverV1alpha1ApiReplaceStorageVersionStatusRequest {
    name: string;
    body: V1alpha1StorageVersion;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
/**
 *
 */
export declare class InternalApiserverV1alpha1Api extends runtime.BaseAPI {
    /**
     * create a StorageVersion
     */
    createStorageVersionRaw(requestParameters: InternalApiserverV1alpha1ApiCreateStorageVersionRequest): Promise<runtime.ApiResponse<V1alpha1StorageVersion>>;
    /**
     * create a StorageVersion
     */
    createStorageVersion(requestParameters: InternalApiserverV1alpha1ApiCreateStorageVersionRequest): Promise<V1alpha1StorageVersion>;
    /**
     * delete collection of StorageVersion
     */
    deleteCollectionStorageVersionRaw(requestParameters: InternalApiserverV1alpha1ApiDeleteCollectionStorageVersionRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete collection of StorageVersion
     */
    deleteCollectionStorageVersion(requestParameters: InternalApiserverV1alpha1ApiDeleteCollectionStorageVersionRequest): Promise<V1Status>;
    /**
     * delete a StorageVersion
     */
    deleteStorageVersionRaw(requestParameters: InternalApiserverV1alpha1ApiDeleteStorageVersionRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete a StorageVersion
     */
    deleteStorageVersion(requestParameters: InternalApiserverV1alpha1ApiDeleteStorageVersionRequest): Promise<V1Status>;
    /**
     * get available resources
     */
    getAPIResourcesRaw(): Promise<runtime.ApiResponse<V1APIResourceList>>;
    /**
     * get available resources
     */
    getAPIResources(): Promise<V1APIResourceList>;
    /**
     * list or watch objects of kind StorageVersion
     */
    listStorageVersionRaw(requestParameters: InternalApiserverV1alpha1ApiListStorageVersionRequest): Promise<runtime.ApiResponse<V1alpha1StorageVersionList>>;
    /**
     * list or watch objects of kind StorageVersion
     */
    listStorageVersion(requestParameters: InternalApiserverV1alpha1ApiListStorageVersionRequest): Promise<V1alpha1StorageVersionList>;
    /**
     * partially update the specified StorageVersion
     */
    patchStorageVersionRaw(requestParameters: InternalApiserverV1alpha1ApiPatchStorageVersionRequest): Promise<runtime.ApiResponse<V1alpha1StorageVersion>>;
    /**
     * partially update the specified StorageVersion
     */
    patchStorageVersion(requestParameters: InternalApiserverV1alpha1ApiPatchStorageVersionRequest): Promise<V1alpha1StorageVersion>;
    /**
     * partially update status of the specified StorageVersion
     */
    patchStorageVersionStatusRaw(requestParameters: InternalApiserverV1alpha1ApiPatchStorageVersionStatusRequest): Promise<runtime.ApiResponse<V1alpha1StorageVersion>>;
    /**
     * partially update status of the specified StorageVersion
     */
    patchStorageVersionStatus(requestParameters: InternalApiserverV1alpha1ApiPatchStorageVersionStatusRequest): Promise<V1alpha1StorageVersion>;
    /**
     * read the specified StorageVersion
     */
    readStorageVersionRaw(requestParameters: InternalApiserverV1alpha1ApiReadStorageVersionRequest): Promise<runtime.ApiResponse<V1alpha1StorageVersion>>;
    /**
     * read the specified StorageVersion
     */
    readStorageVersion(requestParameters: InternalApiserverV1alpha1ApiReadStorageVersionRequest): Promise<V1alpha1StorageVersion>;
    /**
     * read status of the specified StorageVersion
     */
    readStorageVersionStatusRaw(requestParameters: InternalApiserverV1alpha1ApiReadStorageVersionStatusRequest): Promise<runtime.ApiResponse<V1alpha1StorageVersion>>;
    /**
     * read status of the specified StorageVersion
     */
    readStorageVersionStatus(requestParameters: InternalApiserverV1alpha1ApiReadStorageVersionStatusRequest): Promise<V1alpha1StorageVersion>;
    /**
     * replace the specified StorageVersion
     */
    replaceStorageVersionRaw(requestParameters: InternalApiserverV1alpha1ApiReplaceStorageVersionRequest): Promise<runtime.ApiResponse<V1alpha1StorageVersion>>;
    /**
     * replace the specified StorageVersion
     */
    replaceStorageVersion(requestParameters: InternalApiserverV1alpha1ApiReplaceStorageVersionRequest): Promise<V1alpha1StorageVersion>;
    /**
     * replace status of the specified StorageVersion
     */
    replaceStorageVersionStatusRaw(requestParameters: InternalApiserverV1alpha1ApiReplaceStorageVersionStatusRequest): Promise<runtime.ApiResponse<V1alpha1StorageVersion>>;
    /**
     * replace status of the specified StorageVersion
     */
    replaceStorageVersionStatus(requestParameters: InternalApiserverV1alpha1ApiReplaceStorageVersionStatusRequest): Promise<V1alpha1StorageVersion>;
}
