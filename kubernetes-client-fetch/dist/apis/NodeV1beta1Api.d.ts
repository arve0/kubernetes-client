/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { V1APIResourceList, V1DeleteOptions, V1Status, V1beta1RuntimeClass, V1beta1RuntimeClassList } from '../models';
export interface NodeV1beta1ApiCreateRuntimeClassRequest {
    body: V1beta1RuntimeClass;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface NodeV1beta1ApiDeleteCollectionRuntimeClassRequest {
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: V1DeleteOptions;
}
export interface NodeV1beta1ApiDeleteRuntimeClassRequest {
    name: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: V1DeleteOptions;
}
export interface NodeV1beta1ApiListRuntimeClassRequest {
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface NodeV1beta1ApiPatchRuntimeClassRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface NodeV1beta1ApiReadRuntimeClassRequest {
    name: string;
    pretty?: string;
}
export interface NodeV1beta1ApiReplaceRuntimeClassRequest {
    name: string;
    body: V1beta1RuntimeClass;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
/**
 *
 */
export declare class NodeV1beta1Api extends runtime.BaseAPI {
    /**
     * create a RuntimeClass
     */
    createRuntimeClassRaw(requestParameters: NodeV1beta1ApiCreateRuntimeClassRequest): Promise<runtime.ApiResponse<V1beta1RuntimeClass>>;
    /**
     * create a RuntimeClass
     */
    createRuntimeClass(requestParameters: NodeV1beta1ApiCreateRuntimeClassRequest): Promise<V1beta1RuntimeClass>;
    /**
     * delete collection of RuntimeClass
     */
    deleteCollectionRuntimeClassRaw(requestParameters: NodeV1beta1ApiDeleteCollectionRuntimeClassRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete collection of RuntimeClass
     */
    deleteCollectionRuntimeClass(requestParameters: NodeV1beta1ApiDeleteCollectionRuntimeClassRequest): Promise<V1Status>;
    /**
     * delete a RuntimeClass
     */
    deleteRuntimeClassRaw(requestParameters: NodeV1beta1ApiDeleteRuntimeClassRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete a RuntimeClass
     */
    deleteRuntimeClass(requestParameters: NodeV1beta1ApiDeleteRuntimeClassRequest): Promise<V1Status>;
    /**
     * get available resources
     */
    getAPIResourcesRaw(): Promise<runtime.ApiResponse<V1APIResourceList>>;
    /**
     * get available resources
     */
    getAPIResources(): Promise<V1APIResourceList>;
    /**
     * list or watch objects of kind RuntimeClass
     */
    listRuntimeClassRaw(requestParameters: NodeV1beta1ApiListRuntimeClassRequest): Promise<runtime.ApiResponse<V1beta1RuntimeClassList>>;
    /**
     * list or watch objects of kind RuntimeClass
     */
    listRuntimeClass(requestParameters: NodeV1beta1ApiListRuntimeClassRequest): Promise<V1beta1RuntimeClassList>;
    /**
     * partially update the specified RuntimeClass
     */
    patchRuntimeClassRaw(requestParameters: NodeV1beta1ApiPatchRuntimeClassRequest): Promise<runtime.ApiResponse<V1beta1RuntimeClass>>;
    /**
     * partially update the specified RuntimeClass
     */
    patchRuntimeClass(requestParameters: NodeV1beta1ApiPatchRuntimeClassRequest): Promise<V1beta1RuntimeClass>;
    /**
     * read the specified RuntimeClass
     */
    readRuntimeClassRaw(requestParameters: NodeV1beta1ApiReadRuntimeClassRequest): Promise<runtime.ApiResponse<V1beta1RuntimeClass>>;
    /**
     * read the specified RuntimeClass
     */
    readRuntimeClass(requestParameters: NodeV1beta1ApiReadRuntimeClassRequest): Promise<V1beta1RuntimeClass>;
    /**
     * replace the specified RuntimeClass
     */
    replaceRuntimeClassRaw(requestParameters: NodeV1beta1ApiReplaceRuntimeClassRequest): Promise<runtime.ApiResponse<V1beta1RuntimeClass>>;
    /**
     * replace the specified RuntimeClass
     */
    replaceRuntimeClass(requestParameters: NodeV1beta1ApiReplaceRuntimeClassRequest): Promise<V1beta1RuntimeClass>;
}
