/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { V1APIResourceList, V1DeleteOptions, V1Status, V1beta1Event, V1beta1EventList } from '../models';
export interface EventsV1beta1ApiCreateNamespacedEventRequest {
    namespace: string;
    body: V1beta1Event;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface EventsV1beta1ApiDeleteCollectionNamespacedEventRequest {
    namespace: string;
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: V1DeleteOptions;
}
export interface EventsV1beta1ApiDeleteNamespacedEventRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: V1DeleteOptions;
}
export interface EventsV1beta1ApiListEventForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface EventsV1beta1ApiListNamespacedEventRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface EventsV1beta1ApiPatchNamespacedEventRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface EventsV1beta1ApiReadNamespacedEventRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface EventsV1beta1ApiReplaceNamespacedEventRequest {
    name: string;
    namespace: string;
    body: V1beta1Event;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
/**
 *
 */
export declare class EventsV1beta1Api extends runtime.BaseAPI {
    /**
     * create an Event
     */
    createNamespacedEventRaw(requestParameters: EventsV1beta1ApiCreateNamespacedEventRequest): Promise<runtime.ApiResponse<V1beta1Event>>;
    /**
     * create an Event
     */
    createNamespacedEvent(requestParameters: EventsV1beta1ApiCreateNamespacedEventRequest): Promise<V1beta1Event>;
    /**
     * delete collection of Event
     */
    deleteCollectionNamespacedEventRaw(requestParameters: EventsV1beta1ApiDeleteCollectionNamespacedEventRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete collection of Event
     */
    deleteCollectionNamespacedEvent(requestParameters: EventsV1beta1ApiDeleteCollectionNamespacedEventRequest): Promise<V1Status>;
    /**
     * delete an Event
     */
    deleteNamespacedEventRaw(requestParameters: EventsV1beta1ApiDeleteNamespacedEventRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete an Event
     */
    deleteNamespacedEvent(requestParameters: EventsV1beta1ApiDeleteNamespacedEventRequest): Promise<V1Status>;
    /**
     * get available resources
     */
    getAPIResourcesRaw(): Promise<runtime.ApiResponse<V1APIResourceList>>;
    /**
     * get available resources
     */
    getAPIResources(): Promise<V1APIResourceList>;
    /**
     * list or watch objects of kind Event
     */
    listEventForAllNamespacesRaw(requestParameters: EventsV1beta1ApiListEventForAllNamespacesRequest): Promise<runtime.ApiResponse<V1beta1EventList>>;
    /**
     * list or watch objects of kind Event
     */
    listEventForAllNamespaces(requestParameters: EventsV1beta1ApiListEventForAllNamespacesRequest): Promise<V1beta1EventList>;
    /**
     * list or watch objects of kind Event
     */
    listNamespacedEventRaw(requestParameters: EventsV1beta1ApiListNamespacedEventRequest): Promise<runtime.ApiResponse<V1beta1EventList>>;
    /**
     * list or watch objects of kind Event
     */
    listNamespacedEvent(requestParameters: EventsV1beta1ApiListNamespacedEventRequest): Promise<V1beta1EventList>;
    /**
     * partially update the specified Event
     */
    patchNamespacedEventRaw(requestParameters: EventsV1beta1ApiPatchNamespacedEventRequest): Promise<runtime.ApiResponse<V1beta1Event>>;
    /**
     * partially update the specified Event
     */
    patchNamespacedEvent(requestParameters: EventsV1beta1ApiPatchNamespacedEventRequest): Promise<V1beta1Event>;
    /**
     * read the specified Event
     */
    readNamespacedEventRaw(requestParameters: EventsV1beta1ApiReadNamespacedEventRequest): Promise<runtime.ApiResponse<V1beta1Event>>;
    /**
     * read the specified Event
     */
    readNamespacedEvent(requestParameters: EventsV1beta1ApiReadNamespacedEventRequest): Promise<V1beta1Event>;
    /**
     * replace the specified Event
     */
    replaceNamespacedEventRaw(requestParameters: EventsV1beta1ApiReplaceNamespacedEventRequest): Promise<runtime.ApiResponse<V1beta1Event>>;
    /**
     * replace the specified Event
     */
    replaceNamespacedEvent(requestParameters: EventsV1beta1ApiReplaceNamespacedEventRequest): Promise<V1beta1Event>;
}
