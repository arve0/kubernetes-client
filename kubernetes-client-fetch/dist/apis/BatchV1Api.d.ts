/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { V1APIResourceList, V1CronJob, V1CronJobList, V1DeleteOptions, V1Job, V1JobList, V1Status } from '../models';
export interface BatchV1ApiCreateNamespacedCronJobRequest {
    namespace: string;
    body: V1CronJob;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface BatchV1ApiCreateNamespacedJobRequest {
    namespace: string;
    body: V1Job;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface BatchV1ApiDeleteCollectionNamespacedCronJobRequest {
    namespace: string;
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: V1DeleteOptions;
}
export interface BatchV1ApiDeleteCollectionNamespacedJobRequest {
    namespace: string;
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: V1DeleteOptions;
}
export interface BatchV1ApiDeleteNamespacedCronJobRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: V1DeleteOptions;
}
export interface BatchV1ApiDeleteNamespacedJobRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: V1DeleteOptions;
}
export interface BatchV1ApiListCronJobForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface BatchV1ApiListJobForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface BatchV1ApiListNamespacedCronJobRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface BatchV1ApiListNamespacedJobRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface BatchV1ApiPatchNamespacedCronJobRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface BatchV1ApiPatchNamespacedCronJobStatusRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface BatchV1ApiPatchNamespacedJobRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface BatchV1ApiPatchNamespacedJobStatusRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface BatchV1ApiReadNamespacedCronJobRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface BatchV1ApiReadNamespacedCronJobStatusRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface BatchV1ApiReadNamespacedJobRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface BatchV1ApiReadNamespacedJobStatusRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface BatchV1ApiReplaceNamespacedCronJobRequest {
    name: string;
    namespace: string;
    body: V1CronJob;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface BatchV1ApiReplaceNamespacedCronJobStatusRequest {
    name: string;
    namespace: string;
    body: V1CronJob;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface BatchV1ApiReplaceNamespacedJobRequest {
    name: string;
    namespace: string;
    body: V1Job;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface BatchV1ApiReplaceNamespacedJobStatusRequest {
    name: string;
    namespace: string;
    body: V1Job;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
/**
 *
 */
export declare class BatchV1Api extends runtime.BaseAPI {
    /**
     * create a CronJob
     */
    createNamespacedCronJobRaw(requestParameters: BatchV1ApiCreateNamespacedCronJobRequest): Promise<runtime.ApiResponse<V1CronJob>>;
    /**
     * create a CronJob
     */
    createNamespacedCronJob(requestParameters: BatchV1ApiCreateNamespacedCronJobRequest): Promise<V1CronJob>;
    /**
     * create a Job
     */
    createNamespacedJobRaw(requestParameters: BatchV1ApiCreateNamespacedJobRequest): Promise<runtime.ApiResponse<V1Job>>;
    /**
     * create a Job
     */
    createNamespacedJob(requestParameters: BatchV1ApiCreateNamespacedJobRequest): Promise<V1Job>;
    /**
     * delete collection of CronJob
     */
    deleteCollectionNamespacedCronJobRaw(requestParameters: BatchV1ApiDeleteCollectionNamespacedCronJobRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete collection of CronJob
     */
    deleteCollectionNamespacedCronJob(requestParameters: BatchV1ApiDeleteCollectionNamespacedCronJobRequest): Promise<V1Status>;
    /**
     * delete collection of Job
     */
    deleteCollectionNamespacedJobRaw(requestParameters: BatchV1ApiDeleteCollectionNamespacedJobRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete collection of Job
     */
    deleteCollectionNamespacedJob(requestParameters: BatchV1ApiDeleteCollectionNamespacedJobRequest): Promise<V1Status>;
    /**
     * delete a CronJob
     */
    deleteNamespacedCronJobRaw(requestParameters: BatchV1ApiDeleteNamespacedCronJobRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete a CronJob
     */
    deleteNamespacedCronJob(requestParameters: BatchV1ApiDeleteNamespacedCronJobRequest): Promise<V1Status>;
    /**
     * delete a Job
     */
    deleteNamespacedJobRaw(requestParameters: BatchV1ApiDeleteNamespacedJobRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete a Job
     */
    deleteNamespacedJob(requestParameters: BatchV1ApiDeleteNamespacedJobRequest): Promise<V1Status>;
    /**
     * get available resources
     */
    getAPIResourcesRaw(): Promise<runtime.ApiResponse<V1APIResourceList>>;
    /**
     * get available resources
     */
    getAPIResources(): Promise<V1APIResourceList>;
    /**
     * list or watch objects of kind CronJob
     */
    listCronJobForAllNamespacesRaw(requestParameters: BatchV1ApiListCronJobForAllNamespacesRequest): Promise<runtime.ApiResponse<V1CronJobList>>;
    /**
     * list or watch objects of kind CronJob
     */
    listCronJobForAllNamespaces(requestParameters: BatchV1ApiListCronJobForAllNamespacesRequest): Promise<V1CronJobList>;
    /**
     * list or watch objects of kind Job
     */
    listJobForAllNamespacesRaw(requestParameters: BatchV1ApiListJobForAllNamespacesRequest): Promise<runtime.ApiResponse<V1JobList>>;
    /**
     * list or watch objects of kind Job
     */
    listJobForAllNamespaces(requestParameters: BatchV1ApiListJobForAllNamespacesRequest): Promise<V1JobList>;
    /**
     * list or watch objects of kind CronJob
     */
    listNamespacedCronJobRaw(requestParameters: BatchV1ApiListNamespacedCronJobRequest): Promise<runtime.ApiResponse<V1CronJobList>>;
    /**
     * list or watch objects of kind CronJob
     */
    listNamespacedCronJob(requestParameters: BatchV1ApiListNamespacedCronJobRequest): Promise<V1CronJobList>;
    /**
     * list or watch objects of kind Job
     */
    listNamespacedJobRaw(requestParameters: BatchV1ApiListNamespacedJobRequest): Promise<runtime.ApiResponse<V1JobList>>;
    /**
     * list or watch objects of kind Job
     */
    listNamespacedJob(requestParameters: BatchV1ApiListNamespacedJobRequest): Promise<V1JobList>;
    /**
     * partially update the specified CronJob
     */
    patchNamespacedCronJobRaw(requestParameters: BatchV1ApiPatchNamespacedCronJobRequest): Promise<runtime.ApiResponse<V1CronJob>>;
    /**
     * partially update the specified CronJob
     */
    patchNamespacedCronJob(requestParameters: BatchV1ApiPatchNamespacedCronJobRequest): Promise<V1CronJob>;
    /**
     * partially update status of the specified CronJob
     */
    patchNamespacedCronJobStatusRaw(requestParameters: BatchV1ApiPatchNamespacedCronJobStatusRequest): Promise<runtime.ApiResponse<V1CronJob>>;
    /**
     * partially update status of the specified CronJob
     */
    patchNamespacedCronJobStatus(requestParameters: BatchV1ApiPatchNamespacedCronJobStatusRequest): Promise<V1CronJob>;
    /**
     * partially update the specified Job
     */
    patchNamespacedJobRaw(requestParameters: BatchV1ApiPatchNamespacedJobRequest): Promise<runtime.ApiResponse<V1Job>>;
    /**
     * partially update the specified Job
     */
    patchNamespacedJob(requestParameters: BatchV1ApiPatchNamespacedJobRequest): Promise<V1Job>;
    /**
     * partially update status of the specified Job
     */
    patchNamespacedJobStatusRaw(requestParameters: BatchV1ApiPatchNamespacedJobStatusRequest): Promise<runtime.ApiResponse<V1Job>>;
    /**
     * partially update status of the specified Job
     */
    patchNamespacedJobStatus(requestParameters: BatchV1ApiPatchNamespacedJobStatusRequest): Promise<V1Job>;
    /**
     * read the specified CronJob
     */
    readNamespacedCronJobRaw(requestParameters: BatchV1ApiReadNamespacedCronJobRequest): Promise<runtime.ApiResponse<V1CronJob>>;
    /**
     * read the specified CronJob
     */
    readNamespacedCronJob(requestParameters: BatchV1ApiReadNamespacedCronJobRequest): Promise<V1CronJob>;
    /**
     * read status of the specified CronJob
     */
    readNamespacedCronJobStatusRaw(requestParameters: BatchV1ApiReadNamespacedCronJobStatusRequest): Promise<runtime.ApiResponse<V1CronJob>>;
    /**
     * read status of the specified CronJob
     */
    readNamespacedCronJobStatus(requestParameters: BatchV1ApiReadNamespacedCronJobStatusRequest): Promise<V1CronJob>;
    /**
     * read the specified Job
     */
    readNamespacedJobRaw(requestParameters: BatchV1ApiReadNamespacedJobRequest): Promise<runtime.ApiResponse<V1Job>>;
    /**
     * read the specified Job
     */
    readNamespacedJob(requestParameters: BatchV1ApiReadNamespacedJobRequest): Promise<V1Job>;
    /**
     * read status of the specified Job
     */
    readNamespacedJobStatusRaw(requestParameters: BatchV1ApiReadNamespacedJobStatusRequest): Promise<runtime.ApiResponse<V1Job>>;
    /**
     * read status of the specified Job
     */
    readNamespacedJobStatus(requestParameters: BatchV1ApiReadNamespacedJobStatusRequest): Promise<V1Job>;
    /**
     * replace the specified CronJob
     */
    replaceNamespacedCronJobRaw(requestParameters: BatchV1ApiReplaceNamespacedCronJobRequest): Promise<runtime.ApiResponse<V1CronJob>>;
    /**
     * replace the specified CronJob
     */
    replaceNamespacedCronJob(requestParameters: BatchV1ApiReplaceNamespacedCronJobRequest): Promise<V1CronJob>;
    /**
     * replace status of the specified CronJob
     */
    replaceNamespacedCronJobStatusRaw(requestParameters: BatchV1ApiReplaceNamespacedCronJobStatusRequest): Promise<runtime.ApiResponse<V1CronJob>>;
    /**
     * replace status of the specified CronJob
     */
    replaceNamespacedCronJobStatus(requestParameters: BatchV1ApiReplaceNamespacedCronJobStatusRequest): Promise<V1CronJob>;
    /**
     * replace the specified Job
     */
    replaceNamespacedJobRaw(requestParameters: BatchV1ApiReplaceNamespacedJobRequest): Promise<runtime.ApiResponse<V1Job>>;
    /**
     * replace the specified Job
     */
    replaceNamespacedJob(requestParameters: BatchV1ApiReplaceNamespacedJobRequest): Promise<V1Job>;
    /**
     * replace status of the specified Job
     */
    replaceNamespacedJobStatusRaw(requestParameters: BatchV1ApiReplaceNamespacedJobStatusRequest): Promise<runtime.ApiResponse<V1Job>>;
    /**
     * replace status of the specified Job
     */
    replaceNamespacedJobStatus(requestParameters: BatchV1ApiReplaceNamespacedJobStatusRequest): Promise<V1Job>;
}
