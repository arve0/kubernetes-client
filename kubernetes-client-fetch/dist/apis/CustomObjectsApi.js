"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomObjectsApi = void 0;
const runtime = require("../runtime");
const models_1 = require("../models");
/**
 *
 */
class CustomObjectsApi extends runtime.BaseAPI {
    /**
     * Creates a cluster scoped Custom object
     */
    createClusterCustomObjectRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling createClusterCustomObject.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling createClusterCustomObject.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling createClusterCustomObject.');
            }
            if (requestParameters.body === null || requestParameters.body === undefined) {
                throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling createClusterCustomObject.');
            }
            const queryParameters = {};
            if (requestParameters.pretty !== undefined) {
                queryParameters['pretty'] = requestParameters.pretty;
            }
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            if (requestParameters.fieldManager !== undefined) {
                queryParameters['fieldManager'] = requestParameters.fieldManager;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/{plural}`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters.body,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * Creates a cluster scoped Custom object
     */
    createClusterCustomObject(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.createClusterCustomObjectRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * Creates a namespace scoped Custom object
     */
    createNamespacedCustomObjectRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling createNamespacedCustomObject.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling createNamespacedCustomObject.');
            }
            if (requestParameters.namespace === null || requestParameters.namespace === undefined) {
                throw new runtime.RequiredError('namespace', 'Required parameter requestParameters.namespace was null or undefined when calling createNamespacedCustomObject.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling createNamespacedCustomObject.');
            }
            if (requestParameters.body === null || requestParameters.body === undefined) {
                throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling createNamespacedCustomObject.');
            }
            const queryParameters = {};
            if (requestParameters.pretty !== undefined) {
                queryParameters['pretty'] = requestParameters.pretty;
            }
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            if (requestParameters.fieldManager !== undefined) {
                queryParameters['fieldManager'] = requestParameters.fieldManager;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/namespaces/{namespace}/{plural}`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"namespace"}}`, encodeURIComponent(String(requestParameters.namespace))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters.body,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * Creates a namespace scoped Custom object
     */
    createNamespacedCustomObject(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.createNamespacedCustomObjectRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * Deletes the specified cluster scoped custom object
     */
    deleteClusterCustomObjectRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling deleteClusterCustomObject.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling deleteClusterCustomObject.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling deleteClusterCustomObject.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling deleteClusterCustomObject.');
            }
            const queryParameters = {};
            if (requestParameters.gracePeriodSeconds !== undefined) {
                queryParameters['gracePeriodSeconds'] = requestParameters.gracePeriodSeconds;
            }
            if (requestParameters.orphanDependents !== undefined) {
                queryParameters['orphanDependents'] = requestParameters.orphanDependents;
            }
            if (requestParameters.propagationPolicy !== undefined) {
                queryParameters['propagationPolicy'] = requestParameters.propagationPolicy;
            }
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/{plural}/{name}`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
                body: models_1.V1DeleteOptionsToJSON(requestParameters.body),
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * Deletes the specified cluster scoped custom object
     */
    deleteClusterCustomObject(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.deleteClusterCustomObjectRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * Delete collection of cluster scoped custom objects
     */
    deleteCollectionClusterCustomObjectRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling deleteCollectionClusterCustomObject.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling deleteCollectionClusterCustomObject.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling deleteCollectionClusterCustomObject.');
            }
            const queryParameters = {};
            if (requestParameters.pretty !== undefined) {
                queryParameters['pretty'] = requestParameters.pretty;
            }
            if (requestParameters.gracePeriodSeconds !== undefined) {
                queryParameters['gracePeriodSeconds'] = requestParameters.gracePeriodSeconds;
            }
            if (requestParameters.orphanDependents !== undefined) {
                queryParameters['orphanDependents'] = requestParameters.orphanDependents;
            }
            if (requestParameters.propagationPolicy !== undefined) {
                queryParameters['propagationPolicy'] = requestParameters.propagationPolicy;
            }
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/{plural}`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
                body: models_1.V1DeleteOptionsToJSON(requestParameters.body),
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * Delete collection of cluster scoped custom objects
     */
    deleteCollectionClusterCustomObject(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.deleteCollectionClusterCustomObjectRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * Delete collection of namespace scoped custom objects
     */
    deleteCollectionNamespacedCustomObjectRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling deleteCollectionNamespacedCustomObject.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling deleteCollectionNamespacedCustomObject.');
            }
            if (requestParameters.namespace === null || requestParameters.namespace === undefined) {
                throw new runtime.RequiredError('namespace', 'Required parameter requestParameters.namespace was null or undefined when calling deleteCollectionNamespacedCustomObject.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling deleteCollectionNamespacedCustomObject.');
            }
            const queryParameters = {};
            if (requestParameters.pretty !== undefined) {
                queryParameters['pretty'] = requestParameters.pretty;
            }
            if (requestParameters.gracePeriodSeconds !== undefined) {
                queryParameters['gracePeriodSeconds'] = requestParameters.gracePeriodSeconds;
            }
            if (requestParameters.orphanDependents !== undefined) {
                queryParameters['orphanDependents'] = requestParameters.orphanDependents;
            }
            if (requestParameters.propagationPolicy !== undefined) {
                queryParameters['propagationPolicy'] = requestParameters.propagationPolicy;
            }
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/namespaces/{namespace}/{plural}`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"namespace"}}`, encodeURIComponent(String(requestParameters.namespace))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
                body: models_1.V1DeleteOptionsToJSON(requestParameters.body),
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * Delete collection of namespace scoped custom objects
     */
    deleteCollectionNamespacedCustomObject(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.deleteCollectionNamespacedCustomObjectRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * Deletes the specified namespace scoped custom object
     */
    deleteNamespacedCustomObjectRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling deleteNamespacedCustomObject.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling deleteNamespacedCustomObject.');
            }
            if (requestParameters.namespace === null || requestParameters.namespace === undefined) {
                throw new runtime.RequiredError('namespace', 'Required parameter requestParameters.namespace was null or undefined when calling deleteNamespacedCustomObject.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling deleteNamespacedCustomObject.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling deleteNamespacedCustomObject.');
            }
            const queryParameters = {};
            if (requestParameters.gracePeriodSeconds !== undefined) {
                queryParameters['gracePeriodSeconds'] = requestParameters.gracePeriodSeconds;
            }
            if (requestParameters.orphanDependents !== undefined) {
                queryParameters['orphanDependents'] = requestParameters.orphanDependents;
            }
            if (requestParameters.propagationPolicy !== undefined) {
                queryParameters['propagationPolicy'] = requestParameters.propagationPolicy;
            }
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/namespaces/{namespace}/{plural}/{name}`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"namespace"}}`, encodeURIComponent(String(requestParameters.namespace))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
                body: models_1.V1DeleteOptionsToJSON(requestParameters.body),
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * Deletes the specified namespace scoped custom object
     */
    deleteNamespacedCustomObject(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.deleteNamespacedCustomObjectRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * Returns a cluster scoped custom object
     */
    getClusterCustomObjectRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling getClusterCustomObject.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling getClusterCustomObject.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling getClusterCustomObject.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling getClusterCustomObject.');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/{plural}/{name}`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * Returns a cluster scoped custom object
     */
    getClusterCustomObject(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getClusterCustomObjectRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * read scale of the specified custom object
     */
    getClusterCustomObjectScaleRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling getClusterCustomObjectScale.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling getClusterCustomObjectScale.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling getClusterCustomObjectScale.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling getClusterCustomObjectScale.');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/{plural}/{name}/scale`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * read scale of the specified custom object
     */
    getClusterCustomObjectScale(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getClusterCustomObjectScaleRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * read status of the specified cluster scoped custom object
     */
    getClusterCustomObjectStatusRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling getClusterCustomObjectStatus.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling getClusterCustomObjectStatus.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling getClusterCustomObjectStatus.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling getClusterCustomObjectStatus.');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/{plural}/{name}/status`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * read status of the specified cluster scoped custom object
     */
    getClusterCustomObjectStatus(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getClusterCustomObjectStatusRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * Returns a namespace scoped custom object
     */
    getNamespacedCustomObjectRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling getNamespacedCustomObject.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling getNamespacedCustomObject.');
            }
            if (requestParameters.namespace === null || requestParameters.namespace === undefined) {
                throw new runtime.RequiredError('namespace', 'Required parameter requestParameters.namespace was null or undefined when calling getNamespacedCustomObject.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling getNamespacedCustomObject.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling getNamespacedCustomObject.');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/namespaces/{namespace}/{plural}/{name}`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"namespace"}}`, encodeURIComponent(String(requestParameters.namespace))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * Returns a namespace scoped custom object
     */
    getNamespacedCustomObject(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getNamespacedCustomObjectRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * read scale of the specified namespace scoped custom object
     */
    getNamespacedCustomObjectScaleRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling getNamespacedCustomObjectScale.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling getNamespacedCustomObjectScale.');
            }
            if (requestParameters.namespace === null || requestParameters.namespace === undefined) {
                throw new runtime.RequiredError('namespace', 'Required parameter requestParameters.namespace was null or undefined when calling getNamespacedCustomObjectScale.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling getNamespacedCustomObjectScale.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling getNamespacedCustomObjectScale.');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/namespaces/{namespace}/{plural}/{name}/scale`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"namespace"}}`, encodeURIComponent(String(requestParameters.namespace))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * read scale of the specified namespace scoped custom object
     */
    getNamespacedCustomObjectScale(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getNamespacedCustomObjectScaleRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * read status of the specified namespace scoped custom object
     */
    getNamespacedCustomObjectStatusRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling getNamespacedCustomObjectStatus.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling getNamespacedCustomObjectStatus.');
            }
            if (requestParameters.namespace === null || requestParameters.namespace === undefined) {
                throw new runtime.RequiredError('namespace', 'Required parameter requestParameters.namespace was null or undefined when calling getNamespacedCustomObjectStatus.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling getNamespacedCustomObjectStatus.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling getNamespacedCustomObjectStatus.');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/namespaces/{namespace}/{plural}/{name}/status`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"namespace"}}`, encodeURIComponent(String(requestParameters.namespace))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * read status of the specified namespace scoped custom object
     */
    getNamespacedCustomObjectStatus(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getNamespacedCustomObjectStatusRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * list or watch cluster scoped custom objects
     */
    listClusterCustomObjectRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling listClusterCustomObject.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling listClusterCustomObject.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling listClusterCustomObject.');
            }
            const queryParameters = {};
            if (requestParameters.pretty !== undefined) {
                queryParameters['pretty'] = requestParameters.pretty;
            }
            if (requestParameters.allowWatchBookmarks !== undefined) {
                queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
            }
            if (requestParameters._continue !== undefined) {
                queryParameters['continue'] = requestParameters._continue;
            }
            if (requestParameters.fieldSelector !== undefined) {
                queryParameters['fieldSelector'] = requestParameters.fieldSelector;
            }
            if (requestParameters.labelSelector !== undefined) {
                queryParameters['labelSelector'] = requestParameters.labelSelector;
            }
            if (requestParameters.limit !== undefined) {
                queryParameters['limit'] = requestParameters.limit;
            }
            if (requestParameters.resourceVersion !== undefined) {
                queryParameters['resourceVersion'] = requestParameters.resourceVersion;
            }
            if (requestParameters.resourceVersionMatch !== undefined) {
                queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
            }
            if (requestParameters.timeoutSeconds !== undefined) {
                queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
            }
            if (requestParameters.watch !== undefined) {
                queryParameters['watch'] = requestParameters.watch;
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/{plural}`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * list or watch cluster scoped custom objects
     */
    listClusterCustomObject(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.listClusterCustomObjectRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * list or watch namespace scoped custom objects
     */
    listNamespacedCustomObjectRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling listNamespacedCustomObject.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling listNamespacedCustomObject.');
            }
            if (requestParameters.namespace === null || requestParameters.namespace === undefined) {
                throw new runtime.RequiredError('namespace', 'Required parameter requestParameters.namespace was null or undefined when calling listNamespacedCustomObject.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling listNamespacedCustomObject.');
            }
            const queryParameters = {};
            if (requestParameters.pretty !== undefined) {
                queryParameters['pretty'] = requestParameters.pretty;
            }
            if (requestParameters.allowWatchBookmarks !== undefined) {
                queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
            }
            if (requestParameters._continue !== undefined) {
                queryParameters['continue'] = requestParameters._continue;
            }
            if (requestParameters.fieldSelector !== undefined) {
                queryParameters['fieldSelector'] = requestParameters.fieldSelector;
            }
            if (requestParameters.labelSelector !== undefined) {
                queryParameters['labelSelector'] = requestParameters.labelSelector;
            }
            if (requestParameters.limit !== undefined) {
                queryParameters['limit'] = requestParameters.limit;
            }
            if (requestParameters.resourceVersion !== undefined) {
                queryParameters['resourceVersion'] = requestParameters.resourceVersion;
            }
            if (requestParameters.resourceVersionMatch !== undefined) {
                queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
            }
            if (requestParameters.timeoutSeconds !== undefined) {
                queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
            }
            if (requestParameters.watch !== undefined) {
                queryParameters['watch'] = requestParameters.watch;
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/namespaces/{namespace}/{plural}`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"namespace"}}`, encodeURIComponent(String(requestParameters.namespace))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * list or watch namespace scoped custom objects
     */
    listNamespacedCustomObject(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.listNamespacedCustomObjectRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * patch the specified cluster scoped custom object
     */
    patchClusterCustomObjectRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling patchClusterCustomObject.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling patchClusterCustomObject.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling patchClusterCustomObject.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling patchClusterCustomObject.');
            }
            if (requestParameters.body === null || requestParameters.body === undefined) {
                throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling patchClusterCustomObject.');
            }
            const queryParameters = {};
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            if (requestParameters.fieldManager !== undefined) {
                queryParameters['fieldManager'] = requestParameters.fieldManager;
            }
            if (requestParameters.force !== undefined) {
                queryParameters['force'] = requestParameters.force;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json-patch+json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/{plural}/{name}`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'PATCH',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters.body,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * patch the specified cluster scoped custom object
     */
    patchClusterCustomObject(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.patchClusterCustomObjectRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * partially update scale of the specified cluster scoped custom object
     */
    patchClusterCustomObjectScaleRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling patchClusterCustomObjectScale.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling patchClusterCustomObjectScale.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling patchClusterCustomObjectScale.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling patchClusterCustomObjectScale.');
            }
            if (requestParameters.body === null || requestParameters.body === undefined) {
                throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling patchClusterCustomObjectScale.');
            }
            const queryParameters = {};
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            if (requestParameters.fieldManager !== undefined) {
                queryParameters['fieldManager'] = requestParameters.fieldManager;
            }
            if (requestParameters.force !== undefined) {
                queryParameters['force'] = requestParameters.force;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json-patch+json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/{plural}/{name}/scale`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'PATCH',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters.body,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * partially update scale of the specified cluster scoped custom object
     */
    patchClusterCustomObjectScale(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.patchClusterCustomObjectScaleRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * partially update status of the specified cluster scoped custom object
     */
    patchClusterCustomObjectStatusRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling patchClusterCustomObjectStatus.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling patchClusterCustomObjectStatus.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling patchClusterCustomObjectStatus.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling patchClusterCustomObjectStatus.');
            }
            if (requestParameters.body === null || requestParameters.body === undefined) {
                throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling patchClusterCustomObjectStatus.');
            }
            const queryParameters = {};
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            if (requestParameters.fieldManager !== undefined) {
                queryParameters['fieldManager'] = requestParameters.fieldManager;
            }
            if (requestParameters.force !== undefined) {
                queryParameters['force'] = requestParameters.force;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json-patch+json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/{plural}/{name}/status`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'PATCH',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters.body,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * partially update status of the specified cluster scoped custom object
     */
    patchClusterCustomObjectStatus(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.patchClusterCustomObjectStatusRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * patch the specified namespace scoped custom object
     */
    patchNamespacedCustomObjectRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling patchNamespacedCustomObject.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling patchNamespacedCustomObject.');
            }
            if (requestParameters.namespace === null || requestParameters.namespace === undefined) {
                throw new runtime.RequiredError('namespace', 'Required parameter requestParameters.namespace was null or undefined when calling patchNamespacedCustomObject.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling patchNamespacedCustomObject.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling patchNamespacedCustomObject.');
            }
            if (requestParameters.body === null || requestParameters.body === undefined) {
                throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling patchNamespacedCustomObject.');
            }
            const queryParameters = {};
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            if (requestParameters.fieldManager !== undefined) {
                queryParameters['fieldManager'] = requestParameters.fieldManager;
            }
            if (requestParameters.force !== undefined) {
                queryParameters['force'] = requestParameters.force;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json-patch+json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/namespaces/{namespace}/{plural}/{name}`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"namespace"}}`, encodeURIComponent(String(requestParameters.namespace))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'PATCH',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters.body,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * patch the specified namespace scoped custom object
     */
    patchNamespacedCustomObject(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.patchNamespacedCustomObjectRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * partially update scale of the specified namespace scoped custom object
     */
    patchNamespacedCustomObjectScaleRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling patchNamespacedCustomObjectScale.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling patchNamespacedCustomObjectScale.');
            }
            if (requestParameters.namespace === null || requestParameters.namespace === undefined) {
                throw new runtime.RequiredError('namespace', 'Required parameter requestParameters.namespace was null or undefined when calling patchNamespacedCustomObjectScale.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling patchNamespacedCustomObjectScale.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling patchNamespacedCustomObjectScale.');
            }
            if (requestParameters.body === null || requestParameters.body === undefined) {
                throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling patchNamespacedCustomObjectScale.');
            }
            const queryParameters = {};
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            if (requestParameters.fieldManager !== undefined) {
                queryParameters['fieldManager'] = requestParameters.fieldManager;
            }
            if (requestParameters.force !== undefined) {
                queryParameters['force'] = requestParameters.force;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json-patch+json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/namespaces/{namespace}/{plural}/{name}/scale`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"namespace"}}`, encodeURIComponent(String(requestParameters.namespace))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'PATCH',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters.body,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * partially update scale of the specified namespace scoped custom object
     */
    patchNamespacedCustomObjectScale(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.patchNamespacedCustomObjectScaleRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * partially update status of the specified namespace scoped custom object
     */
    patchNamespacedCustomObjectStatusRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling patchNamespacedCustomObjectStatus.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling patchNamespacedCustomObjectStatus.');
            }
            if (requestParameters.namespace === null || requestParameters.namespace === undefined) {
                throw new runtime.RequiredError('namespace', 'Required parameter requestParameters.namespace was null or undefined when calling patchNamespacedCustomObjectStatus.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling patchNamespacedCustomObjectStatus.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling patchNamespacedCustomObjectStatus.');
            }
            if (requestParameters.body === null || requestParameters.body === undefined) {
                throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling patchNamespacedCustomObjectStatus.');
            }
            const queryParameters = {};
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            if (requestParameters.fieldManager !== undefined) {
                queryParameters['fieldManager'] = requestParameters.fieldManager;
            }
            if (requestParameters.force !== undefined) {
                queryParameters['force'] = requestParameters.force;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json-patch+json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/namespaces/{namespace}/{plural}/{name}/status`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"namespace"}}`, encodeURIComponent(String(requestParameters.namespace))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'PATCH',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters.body,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * partially update status of the specified namespace scoped custom object
     */
    patchNamespacedCustomObjectStatus(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.patchNamespacedCustomObjectStatusRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * replace the specified cluster scoped custom object
     */
    replaceClusterCustomObjectRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling replaceClusterCustomObject.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling replaceClusterCustomObject.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling replaceClusterCustomObject.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling replaceClusterCustomObject.');
            }
            if (requestParameters.body === null || requestParameters.body === undefined) {
                throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling replaceClusterCustomObject.');
            }
            const queryParameters = {};
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            if (requestParameters.fieldManager !== undefined) {
                queryParameters['fieldManager'] = requestParameters.fieldManager;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/{plural}/{name}`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters.body,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * replace the specified cluster scoped custom object
     */
    replaceClusterCustomObject(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.replaceClusterCustomObjectRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * replace scale of the specified cluster scoped custom object
     */
    replaceClusterCustomObjectScaleRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling replaceClusterCustomObjectScale.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling replaceClusterCustomObjectScale.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling replaceClusterCustomObjectScale.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling replaceClusterCustomObjectScale.');
            }
            if (requestParameters.body === null || requestParameters.body === undefined) {
                throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling replaceClusterCustomObjectScale.');
            }
            const queryParameters = {};
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            if (requestParameters.fieldManager !== undefined) {
                queryParameters['fieldManager'] = requestParameters.fieldManager;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/{plural}/{name}/scale`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters.body,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * replace scale of the specified cluster scoped custom object
     */
    replaceClusterCustomObjectScale(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.replaceClusterCustomObjectScaleRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * replace status of the cluster scoped specified custom object
     */
    replaceClusterCustomObjectStatusRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling replaceClusterCustomObjectStatus.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling replaceClusterCustomObjectStatus.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling replaceClusterCustomObjectStatus.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling replaceClusterCustomObjectStatus.');
            }
            if (requestParameters.body === null || requestParameters.body === undefined) {
                throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling replaceClusterCustomObjectStatus.');
            }
            const queryParameters = {};
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            if (requestParameters.fieldManager !== undefined) {
                queryParameters['fieldManager'] = requestParameters.fieldManager;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/{plural}/{name}/status`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters.body,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * replace status of the cluster scoped specified custom object
     */
    replaceClusterCustomObjectStatus(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.replaceClusterCustomObjectStatusRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * replace the specified namespace scoped custom object
     */
    replaceNamespacedCustomObjectRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling replaceNamespacedCustomObject.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling replaceNamespacedCustomObject.');
            }
            if (requestParameters.namespace === null || requestParameters.namespace === undefined) {
                throw new runtime.RequiredError('namespace', 'Required parameter requestParameters.namespace was null or undefined when calling replaceNamespacedCustomObject.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling replaceNamespacedCustomObject.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling replaceNamespacedCustomObject.');
            }
            if (requestParameters.body === null || requestParameters.body === undefined) {
                throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling replaceNamespacedCustomObject.');
            }
            const queryParameters = {};
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            if (requestParameters.fieldManager !== undefined) {
                queryParameters['fieldManager'] = requestParameters.fieldManager;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/namespaces/{namespace}/{plural}/{name}`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"namespace"}}`, encodeURIComponent(String(requestParameters.namespace))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters.body,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * replace the specified namespace scoped custom object
     */
    replaceNamespacedCustomObject(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.replaceNamespacedCustomObjectRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * replace scale of the specified namespace scoped custom object
     */
    replaceNamespacedCustomObjectScaleRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling replaceNamespacedCustomObjectScale.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling replaceNamespacedCustomObjectScale.');
            }
            if (requestParameters.namespace === null || requestParameters.namespace === undefined) {
                throw new runtime.RequiredError('namespace', 'Required parameter requestParameters.namespace was null or undefined when calling replaceNamespacedCustomObjectScale.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling replaceNamespacedCustomObjectScale.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling replaceNamespacedCustomObjectScale.');
            }
            if (requestParameters.body === null || requestParameters.body === undefined) {
                throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling replaceNamespacedCustomObjectScale.');
            }
            const queryParameters = {};
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            if (requestParameters.fieldManager !== undefined) {
                queryParameters['fieldManager'] = requestParameters.fieldManager;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/namespaces/{namespace}/{plural}/{name}/scale`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"namespace"}}`, encodeURIComponent(String(requestParameters.namespace))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters.body,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * replace scale of the specified namespace scoped custom object
     */
    replaceNamespacedCustomObjectScale(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.replaceNamespacedCustomObjectScaleRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * replace status of the specified namespace scoped custom object
     */
    replaceNamespacedCustomObjectStatusRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.group === null || requestParameters.group === undefined) {
                throw new runtime.RequiredError('group', 'Required parameter requestParameters.group was null or undefined when calling replaceNamespacedCustomObjectStatus.');
            }
            if (requestParameters.version === null || requestParameters.version === undefined) {
                throw new runtime.RequiredError('version', 'Required parameter requestParameters.version was null or undefined when calling replaceNamespacedCustomObjectStatus.');
            }
            if (requestParameters.namespace === null || requestParameters.namespace === undefined) {
                throw new runtime.RequiredError('namespace', 'Required parameter requestParameters.namespace was null or undefined when calling replaceNamespacedCustomObjectStatus.');
            }
            if (requestParameters.plural === null || requestParameters.plural === undefined) {
                throw new runtime.RequiredError('plural', 'Required parameter requestParameters.plural was null or undefined when calling replaceNamespacedCustomObjectStatus.');
            }
            if (requestParameters.name === null || requestParameters.name === undefined) {
                throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling replaceNamespacedCustomObjectStatus.');
            }
            if (requestParameters.body === null || requestParameters.body === undefined) {
                throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling replaceNamespacedCustomObjectStatus.');
            }
            const queryParameters = {};
            if (requestParameters.dryRun !== undefined) {
                queryParameters['dryRun'] = requestParameters.dryRun;
            }
            if (requestParameters.fieldManager !== undefined) {
                queryParameters['fieldManager'] = requestParameters.fieldManager;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
            }
            const response = yield this.request({
                path: `/apis/{group}/{version}/namespaces/{namespace}/{plural}/{name}/status`.replace(`{${"group"}}`, encodeURIComponent(String(requestParameters.group))).replace(`{${"version"}}`, encodeURIComponent(String(requestParameters.version))).replace(`{${"namespace"}}`, encodeURIComponent(String(requestParameters.namespace))).replace(`{${"plural"}}`, encodeURIComponent(String(requestParameters.plural))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters.body,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * replace status of the specified namespace scoped custom object
     */
    replaceNamespacedCustomObjectStatus(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.replaceNamespacedCustomObjectStatusRaw(requestParameters);
            return yield response.value();
        });
    }
}
exports.CustomObjectsApi = CustomObjectsApi;
