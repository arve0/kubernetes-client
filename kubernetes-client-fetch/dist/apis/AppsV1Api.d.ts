/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { V1APIResourceList, V1ControllerRevision, V1ControllerRevisionList, V1DaemonSet, V1DaemonSetList, V1DeleteOptions, V1Deployment, V1DeploymentList, V1ReplicaSet, V1ReplicaSetList, V1Scale, V1StatefulSet, V1StatefulSetList, V1Status } from '../models';
export interface AppsV1ApiCreateNamespacedControllerRevisionRequest {
    namespace: string;
    body: V1ControllerRevision;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface AppsV1ApiCreateNamespacedDaemonSetRequest {
    namespace: string;
    body: V1DaemonSet;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface AppsV1ApiCreateNamespacedDeploymentRequest {
    namespace: string;
    body: V1Deployment;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface AppsV1ApiCreateNamespacedReplicaSetRequest {
    namespace: string;
    body: V1ReplicaSet;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface AppsV1ApiCreateNamespacedStatefulSetRequest {
    namespace: string;
    body: V1StatefulSet;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface AppsV1ApiDeleteCollectionNamespacedControllerRevisionRequest {
    namespace: string;
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: V1DeleteOptions;
}
export interface AppsV1ApiDeleteCollectionNamespacedDaemonSetRequest {
    namespace: string;
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: V1DeleteOptions;
}
export interface AppsV1ApiDeleteCollectionNamespacedDeploymentRequest {
    namespace: string;
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: V1DeleteOptions;
}
export interface AppsV1ApiDeleteCollectionNamespacedReplicaSetRequest {
    namespace: string;
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: V1DeleteOptions;
}
export interface AppsV1ApiDeleteCollectionNamespacedStatefulSetRequest {
    namespace: string;
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: V1DeleteOptions;
}
export interface AppsV1ApiDeleteNamespacedControllerRevisionRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: V1DeleteOptions;
}
export interface AppsV1ApiDeleteNamespacedDaemonSetRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: V1DeleteOptions;
}
export interface AppsV1ApiDeleteNamespacedDeploymentRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: V1DeleteOptions;
}
export interface AppsV1ApiDeleteNamespacedReplicaSetRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: V1DeleteOptions;
}
export interface AppsV1ApiDeleteNamespacedStatefulSetRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: V1DeleteOptions;
}
export interface AppsV1ApiListControllerRevisionForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface AppsV1ApiListDaemonSetForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface AppsV1ApiListDeploymentForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface AppsV1ApiListNamespacedControllerRevisionRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface AppsV1ApiListNamespacedDaemonSetRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface AppsV1ApiListNamespacedDeploymentRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface AppsV1ApiListNamespacedReplicaSetRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface AppsV1ApiListNamespacedStatefulSetRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface AppsV1ApiListReplicaSetForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface AppsV1ApiListStatefulSetForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface AppsV1ApiPatchNamespacedControllerRevisionRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface AppsV1ApiPatchNamespacedDaemonSetRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface AppsV1ApiPatchNamespacedDaemonSetStatusRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface AppsV1ApiPatchNamespacedDeploymentRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface AppsV1ApiPatchNamespacedDeploymentScaleRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface AppsV1ApiPatchNamespacedDeploymentStatusRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface AppsV1ApiPatchNamespacedReplicaSetRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface AppsV1ApiPatchNamespacedReplicaSetScaleRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface AppsV1ApiPatchNamespacedReplicaSetStatusRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface AppsV1ApiPatchNamespacedStatefulSetRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface AppsV1ApiPatchNamespacedStatefulSetScaleRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface AppsV1ApiPatchNamespacedStatefulSetStatusRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface AppsV1ApiReadNamespacedControllerRevisionRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface AppsV1ApiReadNamespacedDaemonSetRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface AppsV1ApiReadNamespacedDaemonSetStatusRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface AppsV1ApiReadNamespacedDeploymentRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface AppsV1ApiReadNamespacedDeploymentScaleRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface AppsV1ApiReadNamespacedDeploymentStatusRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface AppsV1ApiReadNamespacedReplicaSetRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface AppsV1ApiReadNamespacedReplicaSetScaleRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface AppsV1ApiReadNamespacedReplicaSetStatusRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface AppsV1ApiReadNamespacedStatefulSetRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface AppsV1ApiReadNamespacedStatefulSetScaleRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface AppsV1ApiReadNamespacedStatefulSetStatusRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface AppsV1ApiReplaceNamespacedControllerRevisionRequest {
    name: string;
    namespace: string;
    body: V1ControllerRevision;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface AppsV1ApiReplaceNamespacedDaemonSetRequest {
    name: string;
    namespace: string;
    body: V1DaemonSet;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface AppsV1ApiReplaceNamespacedDaemonSetStatusRequest {
    name: string;
    namespace: string;
    body: V1DaemonSet;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface AppsV1ApiReplaceNamespacedDeploymentRequest {
    name: string;
    namespace: string;
    body: V1Deployment;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface AppsV1ApiReplaceNamespacedDeploymentScaleRequest {
    name: string;
    namespace: string;
    body: V1Scale;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface AppsV1ApiReplaceNamespacedDeploymentStatusRequest {
    name: string;
    namespace: string;
    body: V1Deployment;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface AppsV1ApiReplaceNamespacedReplicaSetRequest {
    name: string;
    namespace: string;
    body: V1ReplicaSet;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface AppsV1ApiReplaceNamespacedReplicaSetScaleRequest {
    name: string;
    namespace: string;
    body: V1Scale;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface AppsV1ApiReplaceNamespacedReplicaSetStatusRequest {
    name: string;
    namespace: string;
    body: V1ReplicaSet;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface AppsV1ApiReplaceNamespacedStatefulSetRequest {
    name: string;
    namespace: string;
    body: V1StatefulSet;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface AppsV1ApiReplaceNamespacedStatefulSetScaleRequest {
    name: string;
    namespace: string;
    body: V1Scale;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface AppsV1ApiReplaceNamespacedStatefulSetStatusRequest {
    name: string;
    namespace: string;
    body: V1StatefulSet;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
/**
 *
 */
export declare class AppsV1Api extends runtime.BaseAPI {
    /**
     * create a ControllerRevision
     */
    createNamespacedControllerRevisionRaw(requestParameters: AppsV1ApiCreateNamespacedControllerRevisionRequest): Promise<runtime.ApiResponse<V1ControllerRevision>>;
    /**
     * create a ControllerRevision
     */
    createNamespacedControllerRevision(requestParameters: AppsV1ApiCreateNamespacedControllerRevisionRequest): Promise<V1ControllerRevision>;
    /**
     * create a DaemonSet
     */
    createNamespacedDaemonSetRaw(requestParameters: AppsV1ApiCreateNamespacedDaemonSetRequest): Promise<runtime.ApiResponse<V1DaemonSet>>;
    /**
     * create a DaemonSet
     */
    createNamespacedDaemonSet(requestParameters: AppsV1ApiCreateNamespacedDaemonSetRequest): Promise<V1DaemonSet>;
    /**
     * create a Deployment
     */
    createNamespacedDeploymentRaw(requestParameters: AppsV1ApiCreateNamespacedDeploymentRequest): Promise<runtime.ApiResponse<V1Deployment>>;
    /**
     * create a Deployment
     */
    createNamespacedDeployment(requestParameters: AppsV1ApiCreateNamespacedDeploymentRequest): Promise<V1Deployment>;
    /**
     * create a ReplicaSet
     */
    createNamespacedReplicaSetRaw(requestParameters: AppsV1ApiCreateNamespacedReplicaSetRequest): Promise<runtime.ApiResponse<V1ReplicaSet>>;
    /**
     * create a ReplicaSet
     */
    createNamespacedReplicaSet(requestParameters: AppsV1ApiCreateNamespacedReplicaSetRequest): Promise<V1ReplicaSet>;
    /**
     * create a StatefulSet
     */
    createNamespacedStatefulSetRaw(requestParameters: AppsV1ApiCreateNamespacedStatefulSetRequest): Promise<runtime.ApiResponse<V1StatefulSet>>;
    /**
     * create a StatefulSet
     */
    createNamespacedStatefulSet(requestParameters: AppsV1ApiCreateNamespacedStatefulSetRequest): Promise<V1StatefulSet>;
    /**
     * delete collection of ControllerRevision
     */
    deleteCollectionNamespacedControllerRevisionRaw(requestParameters: AppsV1ApiDeleteCollectionNamespacedControllerRevisionRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete collection of ControllerRevision
     */
    deleteCollectionNamespacedControllerRevision(requestParameters: AppsV1ApiDeleteCollectionNamespacedControllerRevisionRequest): Promise<V1Status>;
    /**
     * delete collection of DaemonSet
     */
    deleteCollectionNamespacedDaemonSetRaw(requestParameters: AppsV1ApiDeleteCollectionNamespacedDaemonSetRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete collection of DaemonSet
     */
    deleteCollectionNamespacedDaemonSet(requestParameters: AppsV1ApiDeleteCollectionNamespacedDaemonSetRequest): Promise<V1Status>;
    /**
     * delete collection of Deployment
     */
    deleteCollectionNamespacedDeploymentRaw(requestParameters: AppsV1ApiDeleteCollectionNamespacedDeploymentRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete collection of Deployment
     */
    deleteCollectionNamespacedDeployment(requestParameters: AppsV1ApiDeleteCollectionNamespacedDeploymentRequest): Promise<V1Status>;
    /**
     * delete collection of ReplicaSet
     */
    deleteCollectionNamespacedReplicaSetRaw(requestParameters: AppsV1ApiDeleteCollectionNamespacedReplicaSetRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete collection of ReplicaSet
     */
    deleteCollectionNamespacedReplicaSet(requestParameters: AppsV1ApiDeleteCollectionNamespacedReplicaSetRequest): Promise<V1Status>;
    /**
     * delete collection of StatefulSet
     */
    deleteCollectionNamespacedStatefulSetRaw(requestParameters: AppsV1ApiDeleteCollectionNamespacedStatefulSetRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete collection of StatefulSet
     */
    deleteCollectionNamespacedStatefulSet(requestParameters: AppsV1ApiDeleteCollectionNamespacedStatefulSetRequest): Promise<V1Status>;
    /**
     * delete a ControllerRevision
     */
    deleteNamespacedControllerRevisionRaw(requestParameters: AppsV1ApiDeleteNamespacedControllerRevisionRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete a ControllerRevision
     */
    deleteNamespacedControllerRevision(requestParameters: AppsV1ApiDeleteNamespacedControllerRevisionRequest): Promise<V1Status>;
    /**
     * delete a DaemonSet
     */
    deleteNamespacedDaemonSetRaw(requestParameters: AppsV1ApiDeleteNamespacedDaemonSetRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete a DaemonSet
     */
    deleteNamespacedDaemonSet(requestParameters: AppsV1ApiDeleteNamespacedDaemonSetRequest): Promise<V1Status>;
    /**
     * delete a Deployment
     */
    deleteNamespacedDeploymentRaw(requestParameters: AppsV1ApiDeleteNamespacedDeploymentRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete a Deployment
     */
    deleteNamespacedDeployment(requestParameters: AppsV1ApiDeleteNamespacedDeploymentRequest): Promise<V1Status>;
    /**
     * delete a ReplicaSet
     */
    deleteNamespacedReplicaSetRaw(requestParameters: AppsV1ApiDeleteNamespacedReplicaSetRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete a ReplicaSet
     */
    deleteNamespacedReplicaSet(requestParameters: AppsV1ApiDeleteNamespacedReplicaSetRequest): Promise<V1Status>;
    /**
     * delete a StatefulSet
     */
    deleteNamespacedStatefulSetRaw(requestParameters: AppsV1ApiDeleteNamespacedStatefulSetRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete a StatefulSet
     */
    deleteNamespacedStatefulSet(requestParameters: AppsV1ApiDeleteNamespacedStatefulSetRequest): Promise<V1Status>;
    /**
     * get available resources
     */
    getAPIResourcesRaw(): Promise<runtime.ApiResponse<V1APIResourceList>>;
    /**
     * get available resources
     */
    getAPIResources(): Promise<V1APIResourceList>;
    /**
     * list or watch objects of kind ControllerRevision
     */
    listControllerRevisionForAllNamespacesRaw(requestParameters: AppsV1ApiListControllerRevisionForAllNamespacesRequest): Promise<runtime.ApiResponse<V1ControllerRevisionList>>;
    /**
     * list or watch objects of kind ControllerRevision
     */
    listControllerRevisionForAllNamespaces(requestParameters: AppsV1ApiListControllerRevisionForAllNamespacesRequest): Promise<V1ControllerRevisionList>;
    /**
     * list or watch objects of kind DaemonSet
     */
    listDaemonSetForAllNamespacesRaw(requestParameters: AppsV1ApiListDaemonSetForAllNamespacesRequest): Promise<runtime.ApiResponse<V1DaemonSetList>>;
    /**
     * list or watch objects of kind DaemonSet
     */
    listDaemonSetForAllNamespaces(requestParameters: AppsV1ApiListDaemonSetForAllNamespacesRequest): Promise<V1DaemonSetList>;
    /**
     * list or watch objects of kind Deployment
     */
    listDeploymentForAllNamespacesRaw(requestParameters: AppsV1ApiListDeploymentForAllNamespacesRequest): Promise<runtime.ApiResponse<V1DeploymentList>>;
    /**
     * list or watch objects of kind Deployment
     */
    listDeploymentForAllNamespaces(requestParameters: AppsV1ApiListDeploymentForAllNamespacesRequest): Promise<V1DeploymentList>;
    /**
     * list or watch objects of kind ControllerRevision
     */
    listNamespacedControllerRevisionRaw(requestParameters: AppsV1ApiListNamespacedControllerRevisionRequest): Promise<runtime.ApiResponse<V1ControllerRevisionList>>;
    /**
     * list or watch objects of kind ControllerRevision
     */
    listNamespacedControllerRevision(requestParameters: AppsV1ApiListNamespacedControllerRevisionRequest): Promise<V1ControllerRevisionList>;
    /**
     * list or watch objects of kind DaemonSet
     */
    listNamespacedDaemonSetRaw(requestParameters: AppsV1ApiListNamespacedDaemonSetRequest): Promise<runtime.ApiResponse<V1DaemonSetList>>;
    /**
     * list or watch objects of kind DaemonSet
     */
    listNamespacedDaemonSet(requestParameters: AppsV1ApiListNamespacedDaemonSetRequest): Promise<V1DaemonSetList>;
    /**
     * list or watch objects of kind Deployment
     */
    listNamespacedDeploymentRaw(requestParameters: AppsV1ApiListNamespacedDeploymentRequest): Promise<runtime.ApiResponse<V1DeploymentList>>;
    /**
     * list or watch objects of kind Deployment
     */
    listNamespacedDeployment(requestParameters: AppsV1ApiListNamespacedDeploymentRequest): Promise<V1DeploymentList>;
    /**
     * list or watch objects of kind ReplicaSet
     */
    listNamespacedReplicaSetRaw(requestParameters: AppsV1ApiListNamespacedReplicaSetRequest): Promise<runtime.ApiResponse<V1ReplicaSetList>>;
    /**
     * list or watch objects of kind ReplicaSet
     */
    listNamespacedReplicaSet(requestParameters: AppsV1ApiListNamespacedReplicaSetRequest): Promise<V1ReplicaSetList>;
    /**
     * list or watch objects of kind StatefulSet
     */
    listNamespacedStatefulSetRaw(requestParameters: AppsV1ApiListNamespacedStatefulSetRequest): Promise<runtime.ApiResponse<V1StatefulSetList>>;
    /**
     * list or watch objects of kind StatefulSet
     */
    listNamespacedStatefulSet(requestParameters: AppsV1ApiListNamespacedStatefulSetRequest): Promise<V1StatefulSetList>;
    /**
     * list or watch objects of kind ReplicaSet
     */
    listReplicaSetForAllNamespacesRaw(requestParameters: AppsV1ApiListReplicaSetForAllNamespacesRequest): Promise<runtime.ApiResponse<V1ReplicaSetList>>;
    /**
     * list or watch objects of kind ReplicaSet
     */
    listReplicaSetForAllNamespaces(requestParameters: AppsV1ApiListReplicaSetForAllNamespacesRequest): Promise<V1ReplicaSetList>;
    /**
     * list or watch objects of kind StatefulSet
     */
    listStatefulSetForAllNamespacesRaw(requestParameters: AppsV1ApiListStatefulSetForAllNamespacesRequest): Promise<runtime.ApiResponse<V1StatefulSetList>>;
    /**
     * list or watch objects of kind StatefulSet
     */
    listStatefulSetForAllNamespaces(requestParameters: AppsV1ApiListStatefulSetForAllNamespacesRequest): Promise<V1StatefulSetList>;
    /**
     * partially update the specified ControllerRevision
     */
    patchNamespacedControllerRevisionRaw(requestParameters: AppsV1ApiPatchNamespacedControllerRevisionRequest): Promise<runtime.ApiResponse<V1ControllerRevision>>;
    /**
     * partially update the specified ControllerRevision
     */
    patchNamespacedControllerRevision(requestParameters: AppsV1ApiPatchNamespacedControllerRevisionRequest): Promise<V1ControllerRevision>;
    /**
     * partially update the specified DaemonSet
     */
    patchNamespacedDaemonSetRaw(requestParameters: AppsV1ApiPatchNamespacedDaemonSetRequest): Promise<runtime.ApiResponse<V1DaemonSet>>;
    /**
     * partially update the specified DaemonSet
     */
    patchNamespacedDaemonSet(requestParameters: AppsV1ApiPatchNamespacedDaemonSetRequest): Promise<V1DaemonSet>;
    /**
     * partially update status of the specified DaemonSet
     */
    patchNamespacedDaemonSetStatusRaw(requestParameters: AppsV1ApiPatchNamespacedDaemonSetStatusRequest): Promise<runtime.ApiResponse<V1DaemonSet>>;
    /**
     * partially update status of the specified DaemonSet
     */
    patchNamespacedDaemonSetStatus(requestParameters: AppsV1ApiPatchNamespacedDaemonSetStatusRequest): Promise<V1DaemonSet>;
    /**
     * partially update the specified Deployment
     */
    patchNamespacedDeploymentRaw(requestParameters: AppsV1ApiPatchNamespacedDeploymentRequest): Promise<runtime.ApiResponse<V1Deployment>>;
    /**
     * partially update the specified Deployment
     */
    patchNamespacedDeployment(requestParameters: AppsV1ApiPatchNamespacedDeploymentRequest): Promise<V1Deployment>;
    /**
     * partially update scale of the specified Deployment
     */
    patchNamespacedDeploymentScaleRaw(requestParameters: AppsV1ApiPatchNamespacedDeploymentScaleRequest): Promise<runtime.ApiResponse<V1Scale>>;
    /**
     * partially update scale of the specified Deployment
     */
    patchNamespacedDeploymentScale(requestParameters: AppsV1ApiPatchNamespacedDeploymentScaleRequest): Promise<V1Scale>;
    /**
     * partially update status of the specified Deployment
     */
    patchNamespacedDeploymentStatusRaw(requestParameters: AppsV1ApiPatchNamespacedDeploymentStatusRequest): Promise<runtime.ApiResponse<V1Deployment>>;
    /**
     * partially update status of the specified Deployment
     */
    patchNamespacedDeploymentStatus(requestParameters: AppsV1ApiPatchNamespacedDeploymentStatusRequest): Promise<V1Deployment>;
    /**
     * partially update the specified ReplicaSet
     */
    patchNamespacedReplicaSetRaw(requestParameters: AppsV1ApiPatchNamespacedReplicaSetRequest): Promise<runtime.ApiResponse<V1ReplicaSet>>;
    /**
     * partially update the specified ReplicaSet
     */
    patchNamespacedReplicaSet(requestParameters: AppsV1ApiPatchNamespacedReplicaSetRequest): Promise<V1ReplicaSet>;
    /**
     * partially update scale of the specified ReplicaSet
     */
    patchNamespacedReplicaSetScaleRaw(requestParameters: AppsV1ApiPatchNamespacedReplicaSetScaleRequest): Promise<runtime.ApiResponse<V1Scale>>;
    /**
     * partially update scale of the specified ReplicaSet
     */
    patchNamespacedReplicaSetScale(requestParameters: AppsV1ApiPatchNamespacedReplicaSetScaleRequest): Promise<V1Scale>;
    /**
     * partially update status of the specified ReplicaSet
     */
    patchNamespacedReplicaSetStatusRaw(requestParameters: AppsV1ApiPatchNamespacedReplicaSetStatusRequest): Promise<runtime.ApiResponse<V1ReplicaSet>>;
    /**
     * partially update status of the specified ReplicaSet
     */
    patchNamespacedReplicaSetStatus(requestParameters: AppsV1ApiPatchNamespacedReplicaSetStatusRequest): Promise<V1ReplicaSet>;
    /**
     * partially update the specified StatefulSet
     */
    patchNamespacedStatefulSetRaw(requestParameters: AppsV1ApiPatchNamespacedStatefulSetRequest): Promise<runtime.ApiResponse<V1StatefulSet>>;
    /**
     * partially update the specified StatefulSet
     */
    patchNamespacedStatefulSet(requestParameters: AppsV1ApiPatchNamespacedStatefulSetRequest): Promise<V1StatefulSet>;
    /**
     * partially update scale of the specified StatefulSet
     */
    patchNamespacedStatefulSetScaleRaw(requestParameters: AppsV1ApiPatchNamespacedStatefulSetScaleRequest): Promise<runtime.ApiResponse<V1Scale>>;
    /**
     * partially update scale of the specified StatefulSet
     */
    patchNamespacedStatefulSetScale(requestParameters: AppsV1ApiPatchNamespacedStatefulSetScaleRequest): Promise<V1Scale>;
    /**
     * partially update status of the specified StatefulSet
     */
    patchNamespacedStatefulSetStatusRaw(requestParameters: AppsV1ApiPatchNamespacedStatefulSetStatusRequest): Promise<runtime.ApiResponse<V1StatefulSet>>;
    /**
     * partially update status of the specified StatefulSet
     */
    patchNamespacedStatefulSetStatus(requestParameters: AppsV1ApiPatchNamespacedStatefulSetStatusRequest): Promise<V1StatefulSet>;
    /**
     * read the specified ControllerRevision
     */
    readNamespacedControllerRevisionRaw(requestParameters: AppsV1ApiReadNamespacedControllerRevisionRequest): Promise<runtime.ApiResponse<V1ControllerRevision>>;
    /**
     * read the specified ControllerRevision
     */
    readNamespacedControllerRevision(requestParameters: AppsV1ApiReadNamespacedControllerRevisionRequest): Promise<V1ControllerRevision>;
    /**
     * read the specified DaemonSet
     */
    readNamespacedDaemonSetRaw(requestParameters: AppsV1ApiReadNamespacedDaemonSetRequest): Promise<runtime.ApiResponse<V1DaemonSet>>;
    /**
     * read the specified DaemonSet
     */
    readNamespacedDaemonSet(requestParameters: AppsV1ApiReadNamespacedDaemonSetRequest): Promise<V1DaemonSet>;
    /**
     * read status of the specified DaemonSet
     */
    readNamespacedDaemonSetStatusRaw(requestParameters: AppsV1ApiReadNamespacedDaemonSetStatusRequest): Promise<runtime.ApiResponse<V1DaemonSet>>;
    /**
     * read status of the specified DaemonSet
     */
    readNamespacedDaemonSetStatus(requestParameters: AppsV1ApiReadNamespacedDaemonSetStatusRequest): Promise<V1DaemonSet>;
    /**
     * read the specified Deployment
     */
    readNamespacedDeploymentRaw(requestParameters: AppsV1ApiReadNamespacedDeploymentRequest): Promise<runtime.ApiResponse<V1Deployment>>;
    /**
     * read the specified Deployment
     */
    readNamespacedDeployment(requestParameters: AppsV1ApiReadNamespacedDeploymentRequest): Promise<V1Deployment>;
    /**
     * read scale of the specified Deployment
     */
    readNamespacedDeploymentScaleRaw(requestParameters: AppsV1ApiReadNamespacedDeploymentScaleRequest): Promise<runtime.ApiResponse<V1Scale>>;
    /**
     * read scale of the specified Deployment
     */
    readNamespacedDeploymentScale(requestParameters: AppsV1ApiReadNamespacedDeploymentScaleRequest): Promise<V1Scale>;
    /**
     * read status of the specified Deployment
     */
    readNamespacedDeploymentStatusRaw(requestParameters: AppsV1ApiReadNamespacedDeploymentStatusRequest): Promise<runtime.ApiResponse<V1Deployment>>;
    /**
     * read status of the specified Deployment
     */
    readNamespacedDeploymentStatus(requestParameters: AppsV1ApiReadNamespacedDeploymentStatusRequest): Promise<V1Deployment>;
    /**
     * read the specified ReplicaSet
     */
    readNamespacedReplicaSetRaw(requestParameters: AppsV1ApiReadNamespacedReplicaSetRequest): Promise<runtime.ApiResponse<V1ReplicaSet>>;
    /**
     * read the specified ReplicaSet
     */
    readNamespacedReplicaSet(requestParameters: AppsV1ApiReadNamespacedReplicaSetRequest): Promise<V1ReplicaSet>;
    /**
     * read scale of the specified ReplicaSet
     */
    readNamespacedReplicaSetScaleRaw(requestParameters: AppsV1ApiReadNamespacedReplicaSetScaleRequest): Promise<runtime.ApiResponse<V1Scale>>;
    /**
     * read scale of the specified ReplicaSet
     */
    readNamespacedReplicaSetScale(requestParameters: AppsV1ApiReadNamespacedReplicaSetScaleRequest): Promise<V1Scale>;
    /**
     * read status of the specified ReplicaSet
     */
    readNamespacedReplicaSetStatusRaw(requestParameters: AppsV1ApiReadNamespacedReplicaSetStatusRequest): Promise<runtime.ApiResponse<V1ReplicaSet>>;
    /**
     * read status of the specified ReplicaSet
     */
    readNamespacedReplicaSetStatus(requestParameters: AppsV1ApiReadNamespacedReplicaSetStatusRequest): Promise<V1ReplicaSet>;
    /**
     * read the specified StatefulSet
     */
    readNamespacedStatefulSetRaw(requestParameters: AppsV1ApiReadNamespacedStatefulSetRequest): Promise<runtime.ApiResponse<V1StatefulSet>>;
    /**
     * read the specified StatefulSet
     */
    readNamespacedStatefulSet(requestParameters: AppsV1ApiReadNamespacedStatefulSetRequest): Promise<V1StatefulSet>;
    /**
     * read scale of the specified StatefulSet
     */
    readNamespacedStatefulSetScaleRaw(requestParameters: AppsV1ApiReadNamespacedStatefulSetScaleRequest): Promise<runtime.ApiResponse<V1Scale>>;
    /**
     * read scale of the specified StatefulSet
     */
    readNamespacedStatefulSetScale(requestParameters: AppsV1ApiReadNamespacedStatefulSetScaleRequest): Promise<V1Scale>;
    /**
     * read status of the specified StatefulSet
     */
    readNamespacedStatefulSetStatusRaw(requestParameters: AppsV1ApiReadNamespacedStatefulSetStatusRequest): Promise<runtime.ApiResponse<V1StatefulSet>>;
    /**
     * read status of the specified StatefulSet
     */
    readNamespacedStatefulSetStatus(requestParameters: AppsV1ApiReadNamespacedStatefulSetStatusRequest): Promise<V1StatefulSet>;
    /**
     * replace the specified ControllerRevision
     */
    replaceNamespacedControllerRevisionRaw(requestParameters: AppsV1ApiReplaceNamespacedControllerRevisionRequest): Promise<runtime.ApiResponse<V1ControllerRevision>>;
    /**
     * replace the specified ControllerRevision
     */
    replaceNamespacedControllerRevision(requestParameters: AppsV1ApiReplaceNamespacedControllerRevisionRequest): Promise<V1ControllerRevision>;
    /**
     * replace the specified DaemonSet
     */
    replaceNamespacedDaemonSetRaw(requestParameters: AppsV1ApiReplaceNamespacedDaemonSetRequest): Promise<runtime.ApiResponse<V1DaemonSet>>;
    /**
     * replace the specified DaemonSet
     */
    replaceNamespacedDaemonSet(requestParameters: AppsV1ApiReplaceNamespacedDaemonSetRequest): Promise<V1DaemonSet>;
    /**
     * replace status of the specified DaemonSet
     */
    replaceNamespacedDaemonSetStatusRaw(requestParameters: AppsV1ApiReplaceNamespacedDaemonSetStatusRequest): Promise<runtime.ApiResponse<V1DaemonSet>>;
    /**
     * replace status of the specified DaemonSet
     */
    replaceNamespacedDaemonSetStatus(requestParameters: AppsV1ApiReplaceNamespacedDaemonSetStatusRequest): Promise<V1DaemonSet>;
    /**
     * replace the specified Deployment
     */
    replaceNamespacedDeploymentRaw(requestParameters: AppsV1ApiReplaceNamespacedDeploymentRequest): Promise<runtime.ApiResponse<V1Deployment>>;
    /**
     * replace the specified Deployment
     */
    replaceNamespacedDeployment(requestParameters: AppsV1ApiReplaceNamespacedDeploymentRequest): Promise<V1Deployment>;
    /**
     * replace scale of the specified Deployment
     */
    replaceNamespacedDeploymentScaleRaw(requestParameters: AppsV1ApiReplaceNamespacedDeploymentScaleRequest): Promise<runtime.ApiResponse<V1Scale>>;
    /**
     * replace scale of the specified Deployment
     */
    replaceNamespacedDeploymentScale(requestParameters: AppsV1ApiReplaceNamespacedDeploymentScaleRequest): Promise<V1Scale>;
    /**
     * replace status of the specified Deployment
     */
    replaceNamespacedDeploymentStatusRaw(requestParameters: AppsV1ApiReplaceNamespacedDeploymentStatusRequest): Promise<runtime.ApiResponse<V1Deployment>>;
    /**
     * replace status of the specified Deployment
     */
    replaceNamespacedDeploymentStatus(requestParameters: AppsV1ApiReplaceNamespacedDeploymentStatusRequest): Promise<V1Deployment>;
    /**
     * replace the specified ReplicaSet
     */
    replaceNamespacedReplicaSetRaw(requestParameters: AppsV1ApiReplaceNamespacedReplicaSetRequest): Promise<runtime.ApiResponse<V1ReplicaSet>>;
    /**
     * replace the specified ReplicaSet
     */
    replaceNamespacedReplicaSet(requestParameters: AppsV1ApiReplaceNamespacedReplicaSetRequest): Promise<V1ReplicaSet>;
    /**
     * replace scale of the specified ReplicaSet
     */
    replaceNamespacedReplicaSetScaleRaw(requestParameters: AppsV1ApiReplaceNamespacedReplicaSetScaleRequest): Promise<runtime.ApiResponse<V1Scale>>;
    /**
     * replace scale of the specified ReplicaSet
     */
    replaceNamespacedReplicaSetScale(requestParameters: AppsV1ApiReplaceNamespacedReplicaSetScaleRequest): Promise<V1Scale>;
    /**
     * replace status of the specified ReplicaSet
     */
    replaceNamespacedReplicaSetStatusRaw(requestParameters: AppsV1ApiReplaceNamespacedReplicaSetStatusRequest): Promise<runtime.ApiResponse<V1ReplicaSet>>;
    /**
     * replace status of the specified ReplicaSet
     */
    replaceNamespacedReplicaSetStatus(requestParameters: AppsV1ApiReplaceNamespacedReplicaSetStatusRequest): Promise<V1ReplicaSet>;
    /**
     * replace the specified StatefulSet
     */
    replaceNamespacedStatefulSetRaw(requestParameters: AppsV1ApiReplaceNamespacedStatefulSetRequest): Promise<runtime.ApiResponse<V1StatefulSet>>;
    /**
     * replace the specified StatefulSet
     */
    replaceNamespacedStatefulSet(requestParameters: AppsV1ApiReplaceNamespacedStatefulSetRequest): Promise<V1StatefulSet>;
    /**
     * replace scale of the specified StatefulSet
     */
    replaceNamespacedStatefulSetScaleRaw(requestParameters: AppsV1ApiReplaceNamespacedStatefulSetScaleRequest): Promise<runtime.ApiResponse<V1Scale>>;
    /**
     * replace scale of the specified StatefulSet
     */
    replaceNamespacedStatefulSetScale(requestParameters: AppsV1ApiReplaceNamespacedStatefulSetScaleRequest): Promise<V1Scale>;
    /**
     * replace status of the specified StatefulSet
     */
    replaceNamespacedStatefulSetStatusRaw(requestParameters: AppsV1ApiReplaceNamespacedStatefulSetStatusRequest): Promise<runtime.ApiResponse<V1StatefulSet>>;
    /**
     * replace status of the specified StatefulSet
     */
    replaceNamespacedStatefulSetStatus(requestParameters: AppsV1ApiReplaceNamespacedStatefulSetStatusRequest): Promise<V1StatefulSet>;
}
