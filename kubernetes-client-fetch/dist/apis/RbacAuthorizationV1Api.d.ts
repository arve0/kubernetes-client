/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { V1APIResourceList, V1ClusterRole, V1ClusterRoleBinding, V1ClusterRoleBindingList, V1ClusterRoleList, V1DeleteOptions, V1Role, V1RoleBinding, V1RoleBindingList, V1RoleList, V1Status } from '../models';
export interface RbacAuthorizationV1ApiCreateClusterRoleRequest {
    body: V1ClusterRole;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface RbacAuthorizationV1ApiCreateClusterRoleBindingRequest {
    body: V1ClusterRoleBinding;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface RbacAuthorizationV1ApiCreateNamespacedRoleRequest {
    namespace: string;
    body: V1Role;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface RbacAuthorizationV1ApiCreateNamespacedRoleBindingRequest {
    namespace: string;
    body: V1RoleBinding;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface RbacAuthorizationV1ApiDeleteClusterRoleRequest {
    name: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: V1DeleteOptions;
}
export interface RbacAuthorizationV1ApiDeleteClusterRoleBindingRequest {
    name: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: V1DeleteOptions;
}
export interface RbacAuthorizationV1ApiDeleteCollectionClusterRoleRequest {
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: V1DeleteOptions;
}
export interface RbacAuthorizationV1ApiDeleteCollectionClusterRoleBindingRequest {
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: V1DeleteOptions;
}
export interface RbacAuthorizationV1ApiDeleteCollectionNamespacedRoleRequest {
    namespace: string;
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: V1DeleteOptions;
}
export interface RbacAuthorizationV1ApiDeleteCollectionNamespacedRoleBindingRequest {
    namespace: string;
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: V1DeleteOptions;
}
export interface RbacAuthorizationV1ApiDeleteNamespacedRoleRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: V1DeleteOptions;
}
export interface RbacAuthorizationV1ApiDeleteNamespacedRoleBindingRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: V1DeleteOptions;
}
export interface RbacAuthorizationV1ApiListClusterRoleRequest {
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface RbacAuthorizationV1ApiListClusterRoleBindingRequest {
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface RbacAuthorizationV1ApiListNamespacedRoleRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface RbacAuthorizationV1ApiListNamespacedRoleBindingRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface RbacAuthorizationV1ApiListRoleBindingForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface RbacAuthorizationV1ApiListRoleForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface RbacAuthorizationV1ApiPatchClusterRoleRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface RbacAuthorizationV1ApiPatchClusterRoleBindingRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface RbacAuthorizationV1ApiPatchNamespacedRoleRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface RbacAuthorizationV1ApiPatchNamespacedRoleBindingRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface RbacAuthorizationV1ApiReadClusterRoleRequest {
    name: string;
    pretty?: string;
}
export interface RbacAuthorizationV1ApiReadClusterRoleBindingRequest {
    name: string;
    pretty?: string;
}
export interface RbacAuthorizationV1ApiReadNamespacedRoleRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface RbacAuthorizationV1ApiReadNamespacedRoleBindingRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface RbacAuthorizationV1ApiReplaceClusterRoleRequest {
    name: string;
    body: V1ClusterRole;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface RbacAuthorizationV1ApiReplaceClusterRoleBindingRequest {
    name: string;
    body: V1ClusterRoleBinding;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface RbacAuthorizationV1ApiReplaceNamespacedRoleRequest {
    name: string;
    namespace: string;
    body: V1Role;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface RbacAuthorizationV1ApiReplaceNamespacedRoleBindingRequest {
    name: string;
    namespace: string;
    body: V1RoleBinding;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
/**
 *
 */
export declare class RbacAuthorizationV1Api extends runtime.BaseAPI {
    /**
     * create a ClusterRole
     */
    createClusterRoleRaw(requestParameters: RbacAuthorizationV1ApiCreateClusterRoleRequest): Promise<runtime.ApiResponse<V1ClusterRole>>;
    /**
     * create a ClusterRole
     */
    createClusterRole(requestParameters: RbacAuthorizationV1ApiCreateClusterRoleRequest): Promise<V1ClusterRole>;
    /**
     * create a ClusterRoleBinding
     */
    createClusterRoleBindingRaw(requestParameters: RbacAuthorizationV1ApiCreateClusterRoleBindingRequest): Promise<runtime.ApiResponse<V1ClusterRoleBinding>>;
    /**
     * create a ClusterRoleBinding
     */
    createClusterRoleBinding(requestParameters: RbacAuthorizationV1ApiCreateClusterRoleBindingRequest): Promise<V1ClusterRoleBinding>;
    /**
     * create a Role
     */
    createNamespacedRoleRaw(requestParameters: RbacAuthorizationV1ApiCreateNamespacedRoleRequest): Promise<runtime.ApiResponse<V1Role>>;
    /**
     * create a Role
     */
    createNamespacedRole(requestParameters: RbacAuthorizationV1ApiCreateNamespacedRoleRequest): Promise<V1Role>;
    /**
     * create a RoleBinding
     */
    createNamespacedRoleBindingRaw(requestParameters: RbacAuthorizationV1ApiCreateNamespacedRoleBindingRequest): Promise<runtime.ApiResponse<V1RoleBinding>>;
    /**
     * create a RoleBinding
     */
    createNamespacedRoleBinding(requestParameters: RbacAuthorizationV1ApiCreateNamespacedRoleBindingRequest): Promise<V1RoleBinding>;
    /**
     * delete a ClusterRole
     */
    deleteClusterRoleRaw(requestParameters: RbacAuthorizationV1ApiDeleteClusterRoleRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete a ClusterRole
     */
    deleteClusterRole(requestParameters: RbacAuthorizationV1ApiDeleteClusterRoleRequest): Promise<V1Status>;
    /**
     * delete a ClusterRoleBinding
     */
    deleteClusterRoleBindingRaw(requestParameters: RbacAuthorizationV1ApiDeleteClusterRoleBindingRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete a ClusterRoleBinding
     */
    deleteClusterRoleBinding(requestParameters: RbacAuthorizationV1ApiDeleteClusterRoleBindingRequest): Promise<V1Status>;
    /**
     * delete collection of ClusterRole
     */
    deleteCollectionClusterRoleRaw(requestParameters: RbacAuthorizationV1ApiDeleteCollectionClusterRoleRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete collection of ClusterRole
     */
    deleteCollectionClusterRole(requestParameters: RbacAuthorizationV1ApiDeleteCollectionClusterRoleRequest): Promise<V1Status>;
    /**
     * delete collection of ClusterRoleBinding
     */
    deleteCollectionClusterRoleBindingRaw(requestParameters: RbacAuthorizationV1ApiDeleteCollectionClusterRoleBindingRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete collection of ClusterRoleBinding
     */
    deleteCollectionClusterRoleBinding(requestParameters: RbacAuthorizationV1ApiDeleteCollectionClusterRoleBindingRequest): Promise<V1Status>;
    /**
     * delete collection of Role
     */
    deleteCollectionNamespacedRoleRaw(requestParameters: RbacAuthorizationV1ApiDeleteCollectionNamespacedRoleRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete collection of Role
     */
    deleteCollectionNamespacedRole(requestParameters: RbacAuthorizationV1ApiDeleteCollectionNamespacedRoleRequest): Promise<V1Status>;
    /**
     * delete collection of RoleBinding
     */
    deleteCollectionNamespacedRoleBindingRaw(requestParameters: RbacAuthorizationV1ApiDeleteCollectionNamespacedRoleBindingRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete collection of RoleBinding
     */
    deleteCollectionNamespacedRoleBinding(requestParameters: RbacAuthorizationV1ApiDeleteCollectionNamespacedRoleBindingRequest): Promise<V1Status>;
    /**
     * delete a Role
     */
    deleteNamespacedRoleRaw(requestParameters: RbacAuthorizationV1ApiDeleteNamespacedRoleRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete a Role
     */
    deleteNamespacedRole(requestParameters: RbacAuthorizationV1ApiDeleteNamespacedRoleRequest): Promise<V1Status>;
    /**
     * delete a RoleBinding
     */
    deleteNamespacedRoleBindingRaw(requestParameters: RbacAuthorizationV1ApiDeleteNamespacedRoleBindingRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete a RoleBinding
     */
    deleteNamespacedRoleBinding(requestParameters: RbacAuthorizationV1ApiDeleteNamespacedRoleBindingRequest): Promise<V1Status>;
    /**
     * get available resources
     */
    getAPIResourcesRaw(): Promise<runtime.ApiResponse<V1APIResourceList>>;
    /**
     * get available resources
     */
    getAPIResources(): Promise<V1APIResourceList>;
    /**
     * list or watch objects of kind ClusterRole
     */
    listClusterRoleRaw(requestParameters: RbacAuthorizationV1ApiListClusterRoleRequest): Promise<runtime.ApiResponse<V1ClusterRoleList>>;
    /**
     * list or watch objects of kind ClusterRole
     */
    listClusterRole(requestParameters: RbacAuthorizationV1ApiListClusterRoleRequest): Promise<V1ClusterRoleList>;
    /**
     * list or watch objects of kind ClusterRoleBinding
     */
    listClusterRoleBindingRaw(requestParameters: RbacAuthorizationV1ApiListClusterRoleBindingRequest): Promise<runtime.ApiResponse<V1ClusterRoleBindingList>>;
    /**
     * list or watch objects of kind ClusterRoleBinding
     */
    listClusterRoleBinding(requestParameters: RbacAuthorizationV1ApiListClusterRoleBindingRequest): Promise<V1ClusterRoleBindingList>;
    /**
     * list or watch objects of kind Role
     */
    listNamespacedRoleRaw(requestParameters: RbacAuthorizationV1ApiListNamespacedRoleRequest): Promise<runtime.ApiResponse<V1RoleList>>;
    /**
     * list or watch objects of kind Role
     */
    listNamespacedRole(requestParameters: RbacAuthorizationV1ApiListNamespacedRoleRequest): Promise<V1RoleList>;
    /**
     * list or watch objects of kind RoleBinding
     */
    listNamespacedRoleBindingRaw(requestParameters: RbacAuthorizationV1ApiListNamespacedRoleBindingRequest): Promise<runtime.ApiResponse<V1RoleBindingList>>;
    /**
     * list or watch objects of kind RoleBinding
     */
    listNamespacedRoleBinding(requestParameters: RbacAuthorizationV1ApiListNamespacedRoleBindingRequest): Promise<V1RoleBindingList>;
    /**
     * list or watch objects of kind RoleBinding
     */
    listRoleBindingForAllNamespacesRaw(requestParameters: RbacAuthorizationV1ApiListRoleBindingForAllNamespacesRequest): Promise<runtime.ApiResponse<V1RoleBindingList>>;
    /**
     * list or watch objects of kind RoleBinding
     */
    listRoleBindingForAllNamespaces(requestParameters: RbacAuthorizationV1ApiListRoleBindingForAllNamespacesRequest): Promise<V1RoleBindingList>;
    /**
     * list or watch objects of kind Role
     */
    listRoleForAllNamespacesRaw(requestParameters: RbacAuthorizationV1ApiListRoleForAllNamespacesRequest): Promise<runtime.ApiResponse<V1RoleList>>;
    /**
     * list or watch objects of kind Role
     */
    listRoleForAllNamespaces(requestParameters: RbacAuthorizationV1ApiListRoleForAllNamespacesRequest): Promise<V1RoleList>;
    /**
     * partially update the specified ClusterRole
     */
    patchClusterRoleRaw(requestParameters: RbacAuthorizationV1ApiPatchClusterRoleRequest): Promise<runtime.ApiResponse<V1ClusterRole>>;
    /**
     * partially update the specified ClusterRole
     */
    patchClusterRole(requestParameters: RbacAuthorizationV1ApiPatchClusterRoleRequest): Promise<V1ClusterRole>;
    /**
     * partially update the specified ClusterRoleBinding
     */
    patchClusterRoleBindingRaw(requestParameters: RbacAuthorizationV1ApiPatchClusterRoleBindingRequest): Promise<runtime.ApiResponse<V1ClusterRoleBinding>>;
    /**
     * partially update the specified ClusterRoleBinding
     */
    patchClusterRoleBinding(requestParameters: RbacAuthorizationV1ApiPatchClusterRoleBindingRequest): Promise<V1ClusterRoleBinding>;
    /**
     * partially update the specified Role
     */
    patchNamespacedRoleRaw(requestParameters: RbacAuthorizationV1ApiPatchNamespacedRoleRequest): Promise<runtime.ApiResponse<V1Role>>;
    /**
     * partially update the specified Role
     */
    patchNamespacedRole(requestParameters: RbacAuthorizationV1ApiPatchNamespacedRoleRequest): Promise<V1Role>;
    /**
     * partially update the specified RoleBinding
     */
    patchNamespacedRoleBindingRaw(requestParameters: RbacAuthorizationV1ApiPatchNamespacedRoleBindingRequest): Promise<runtime.ApiResponse<V1RoleBinding>>;
    /**
     * partially update the specified RoleBinding
     */
    patchNamespacedRoleBinding(requestParameters: RbacAuthorizationV1ApiPatchNamespacedRoleBindingRequest): Promise<V1RoleBinding>;
    /**
     * read the specified ClusterRole
     */
    readClusterRoleRaw(requestParameters: RbacAuthorizationV1ApiReadClusterRoleRequest): Promise<runtime.ApiResponse<V1ClusterRole>>;
    /**
     * read the specified ClusterRole
     */
    readClusterRole(requestParameters: RbacAuthorizationV1ApiReadClusterRoleRequest): Promise<V1ClusterRole>;
    /**
     * read the specified ClusterRoleBinding
     */
    readClusterRoleBindingRaw(requestParameters: RbacAuthorizationV1ApiReadClusterRoleBindingRequest): Promise<runtime.ApiResponse<V1ClusterRoleBinding>>;
    /**
     * read the specified ClusterRoleBinding
     */
    readClusterRoleBinding(requestParameters: RbacAuthorizationV1ApiReadClusterRoleBindingRequest): Promise<V1ClusterRoleBinding>;
    /**
     * read the specified Role
     */
    readNamespacedRoleRaw(requestParameters: RbacAuthorizationV1ApiReadNamespacedRoleRequest): Promise<runtime.ApiResponse<V1Role>>;
    /**
     * read the specified Role
     */
    readNamespacedRole(requestParameters: RbacAuthorizationV1ApiReadNamespacedRoleRequest): Promise<V1Role>;
    /**
     * read the specified RoleBinding
     */
    readNamespacedRoleBindingRaw(requestParameters: RbacAuthorizationV1ApiReadNamespacedRoleBindingRequest): Promise<runtime.ApiResponse<V1RoleBinding>>;
    /**
     * read the specified RoleBinding
     */
    readNamespacedRoleBinding(requestParameters: RbacAuthorizationV1ApiReadNamespacedRoleBindingRequest): Promise<V1RoleBinding>;
    /**
     * replace the specified ClusterRole
     */
    replaceClusterRoleRaw(requestParameters: RbacAuthorizationV1ApiReplaceClusterRoleRequest): Promise<runtime.ApiResponse<V1ClusterRole>>;
    /**
     * replace the specified ClusterRole
     */
    replaceClusterRole(requestParameters: RbacAuthorizationV1ApiReplaceClusterRoleRequest): Promise<V1ClusterRole>;
    /**
     * replace the specified ClusterRoleBinding
     */
    replaceClusterRoleBindingRaw(requestParameters: RbacAuthorizationV1ApiReplaceClusterRoleBindingRequest): Promise<runtime.ApiResponse<V1ClusterRoleBinding>>;
    /**
     * replace the specified ClusterRoleBinding
     */
    replaceClusterRoleBinding(requestParameters: RbacAuthorizationV1ApiReplaceClusterRoleBindingRequest): Promise<V1ClusterRoleBinding>;
    /**
     * replace the specified Role
     */
    replaceNamespacedRoleRaw(requestParameters: RbacAuthorizationV1ApiReplaceNamespacedRoleRequest): Promise<runtime.ApiResponse<V1Role>>;
    /**
     * replace the specified Role
     */
    replaceNamespacedRole(requestParameters: RbacAuthorizationV1ApiReplaceNamespacedRoleRequest): Promise<V1Role>;
    /**
     * replace the specified RoleBinding
     */
    replaceNamespacedRoleBindingRaw(requestParameters: RbacAuthorizationV1ApiReplaceNamespacedRoleBindingRequest): Promise<runtime.ApiResponse<V1RoleBinding>>;
    /**
     * replace the specified RoleBinding
     */
    replaceNamespacedRoleBinding(requestParameters: RbacAuthorizationV1ApiReplaceNamespacedRoleBindingRequest): Promise<V1RoleBinding>;
}
