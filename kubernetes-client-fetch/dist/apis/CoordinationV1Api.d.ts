/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { V1APIResourceList, V1DeleteOptions, V1Lease, V1LeaseList, V1Status } from '../models';
export interface CoordinationV1ApiCreateNamespacedLeaseRequest {
    namespace: string;
    body: V1Lease;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
export interface CoordinationV1ApiDeleteCollectionNamespacedLeaseRequest {
    namespace: string;
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: V1DeleteOptions;
}
export interface CoordinationV1ApiDeleteNamespacedLeaseRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: V1DeleteOptions;
}
export interface CoordinationV1ApiListLeaseForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface CoordinationV1ApiListNamespacedLeaseRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface CoordinationV1ApiPatchNamespacedLeaseRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}
export interface CoordinationV1ApiReadNamespacedLeaseRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface CoordinationV1ApiReplaceNamespacedLeaseRequest {
    name: string;
    namespace: string;
    body: V1Lease;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}
/**
 *
 */
export declare class CoordinationV1Api extends runtime.BaseAPI {
    /**
     * create a Lease
     */
    createNamespacedLeaseRaw(requestParameters: CoordinationV1ApiCreateNamespacedLeaseRequest): Promise<runtime.ApiResponse<V1Lease>>;
    /**
     * create a Lease
     */
    createNamespacedLease(requestParameters: CoordinationV1ApiCreateNamespacedLeaseRequest): Promise<V1Lease>;
    /**
     * delete collection of Lease
     */
    deleteCollectionNamespacedLeaseRaw(requestParameters: CoordinationV1ApiDeleteCollectionNamespacedLeaseRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete collection of Lease
     */
    deleteCollectionNamespacedLease(requestParameters: CoordinationV1ApiDeleteCollectionNamespacedLeaseRequest): Promise<V1Status>;
    /**
     * delete a Lease
     */
    deleteNamespacedLeaseRaw(requestParameters: CoordinationV1ApiDeleteNamespacedLeaseRequest): Promise<runtime.ApiResponse<V1Status>>;
    /**
     * delete a Lease
     */
    deleteNamespacedLease(requestParameters: CoordinationV1ApiDeleteNamespacedLeaseRequest): Promise<V1Status>;
    /**
     * get available resources
     */
    getAPIResourcesRaw(): Promise<runtime.ApiResponse<V1APIResourceList>>;
    /**
     * get available resources
     */
    getAPIResources(): Promise<V1APIResourceList>;
    /**
     * list or watch objects of kind Lease
     */
    listLeaseForAllNamespacesRaw(requestParameters: CoordinationV1ApiListLeaseForAllNamespacesRequest): Promise<runtime.ApiResponse<V1LeaseList>>;
    /**
     * list or watch objects of kind Lease
     */
    listLeaseForAllNamespaces(requestParameters: CoordinationV1ApiListLeaseForAllNamespacesRequest): Promise<V1LeaseList>;
    /**
     * list or watch objects of kind Lease
     */
    listNamespacedLeaseRaw(requestParameters: CoordinationV1ApiListNamespacedLeaseRequest): Promise<runtime.ApiResponse<V1LeaseList>>;
    /**
     * list or watch objects of kind Lease
     */
    listNamespacedLease(requestParameters: CoordinationV1ApiListNamespacedLeaseRequest): Promise<V1LeaseList>;
    /**
     * partially update the specified Lease
     */
    patchNamespacedLeaseRaw(requestParameters: CoordinationV1ApiPatchNamespacedLeaseRequest): Promise<runtime.ApiResponse<V1Lease>>;
    /**
     * partially update the specified Lease
     */
    patchNamespacedLease(requestParameters: CoordinationV1ApiPatchNamespacedLeaseRequest): Promise<V1Lease>;
    /**
     * read the specified Lease
     */
    readNamespacedLeaseRaw(requestParameters: CoordinationV1ApiReadNamespacedLeaseRequest): Promise<runtime.ApiResponse<V1Lease>>;
    /**
     * read the specified Lease
     */
    readNamespacedLease(requestParameters: CoordinationV1ApiReadNamespacedLeaseRequest): Promise<V1Lease>;
    /**
     * replace the specified Lease
     */
    replaceNamespacedLeaseRaw(requestParameters: CoordinationV1ApiReplaceNamespacedLeaseRequest): Promise<runtime.ApiResponse<V1Lease>>;
    /**
     * replace the specified Lease
     */
    replaceNamespacedLease(requestParameters: CoordinationV1ApiReplaceNamespacedLeaseRequest): Promise<V1Lease>;
}
